

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Wed Feb 28 15:17:48 2018

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.40
    14                           ; Generated 01/12/2016 GMT
    15                           ; 
    16                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F88 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001E                     	;# 
    74  001F                     	;# 
    75  0081                     	;# 
    76  0085                     	;# 
    77  0086                     	;# 
    78  008C                     	;# 
    79  008D                     	;# 
    80  008E                     	;# 
    81  008F                     	;# 
    82  0090                     	;# 
    83  0092                     	;# 
    84  0093                     	;# 
    85  0094                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  0105                     	;# 
    94  010C                     	;# 
    95  010D                     	;# 
    96  010E                     	;# 
    97  010F                     	;# 
    98  018C                     	;# 
    99  018D                     	;# 
   100  0005                     _PORTA	set	5
   101  0006                     _PORTB	set	6
   102  001A                     _RCREG	set	26
   103  0018                     _RCSTAbits	set	24
   104  0019                     _TXREG	set	25
   105  00C4                     _CREN	set	196
   106  005F                     _GIE	set	95
   107  005E                     _PEIE	set	94
   108  0065                     _RCIF	set	101
   109  00C6                     _RX9	set	198
   110  00C7                     _SPEN	set	199
   111  0099                     _SPBRG	set	153
   112  0085                     _TRISA	set	133
   113  0086                     _TRISB	set	134
   114  04C2                     _BRGH	set	1218
   115  04C4                     _SYNC	set	1220
   116  0432                     _TRISB2	set	1074
   117  0435                     _TRISB5	set	1077
   118  04C1                     _TRMT	set	1217
   119  04C6                     _TX9	set	1222
   120  04C5                     _TXEN	set	1221
   121                           
   122                           ; #config settings
   123  0000                     
   124                           	psect	cinit
   125  07FD                     start_initialization:	
   126  07FD                     __initialization:	
   127  07FD                     end_of_initialization:	
   128                           ;End of C runtime variable initialization code
   129                           
   130  07FD                     __end_of__initialization:	
   131  07FD  0183               	clrf	3
   132  07FE  118A  2FE7         	ljmp	_main	;jump to C main() function
   133                           
   134                           	psect	cstackCOMMON
   135  0070                     __pcstackCOMMON:	
   136  0070                     ?_UART_Init:	
   137  0070                     ??_UART_Init:	
   138                           ; 1 bytes @ 0x0
   139                           
   140  0070                     ?_UART_send_byte:	
   141                           ; 1 bytes @ 0x0
   142                           
   143  0070                     ??_UART_send_byte:	
   144                           ; 1 bytes @ 0x0
   145                           
   146  0070                     ?_UART_read_byte:	
   147                           ; 1 bytes @ 0x0
   148                           
   149  0070                     ??_UART_read_byte:	
   150                           ; 1 bytes @ 0x0
   151                           
   152  0070                     ?_Syst_Init:	
   153                           ; 1 bytes @ 0x0
   154                           
   155  0070                     ??_Syst_Init:	
   156                           ; 1 bytes @ 0x0
   157                           
   158  0070                     ?_main:	
   159                           ; 1 bytes @ 0x0
   160                           
   161  0070                     UART_send_byte@single_byte:	
   162                           ; 1 bytes @ 0x0
   163                           
   164                           
   165                           ; 1 bytes @ 0x0
   166  0070                     	ds	1
   167  0071                     ??_main:	
   168                           
   169                           ; 1 bytes @ 0x1
   170  0071                     	ds	1
   171  0072                     main@str:	
   172                           
   173                           ; 1 bytes @ 0x2
   174  0072                     	ds	1
   175  0073                     main@ch:	
   176                           
   177                           ; 1 bytes @ 0x3
   178  0073                     	ds	1
   179                           
   180                           	psect	maintext
   181  07E7                     __pmaintext:	
   182 ;;
   183 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   184 ;;
   185 ;; *************** function _main *****************
   186 ;; Defined at:
   187 ;;		line 25 in file "main.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;  ch              1    3[COMMON] unsigned char 
   192 ;;  buffer         30    0        unsigned char [30]
   193 ;;  str             1    2[COMMON] PTR unsigned char 
   194 ;;		 -> NULL(0), 
   195 ;; Return value:  Size  Location     Type
   196 ;;                  1    wreg      void 
   197 ;; Registers used:
   198 ;;		wreg, status,2, status,0, pclath, cstack
   199 ;; Tracked objects:
   200 ;;		On entry : B00/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   204 ;;      Params:         0       0       0       0       0
   205 ;;      Locals:         2       0       0       0       0
   206 ;;      Temps:          1       0       0       0       0
   207 ;;      Totals:         3       0       0       0       0
   208 ;;Total ram usage:        3 bytes
   209 ;; Hardware stack levels required when called:    1
   210 ;; This function calls:
   211 ;;		_Syst_Init
   212 ;;		_UART_Init
   213 ;;		_UART_read_byte
   214 ;;		_UART_send_byte
   215 ;; This function is called by:
   216 ;;		Startup code after reset
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           
   221                           ;psect for function _main
   222  07E7                     _main:	
   223                           
   224                           ;main.c: 27: Syst_Init();
   225                           
   226                           ;incstack = 0
   227                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   228  07E7  118A  27C4  118A   	fcall	_Syst_Init
   229                           
   230                           ;main.c: 28: UART_Init();
   231  07EA  118A  27D3  118A   	fcall	_UART_Init
   232                           
   233                           ;main.c: 30: char* str = (0);
   234  07ED  01F2               	clrf	main@str
   235  07EE                     l629:	
   236                           ;main.c: 31: char buffer[30];
   237                           ;main.c: 33: while(1){
   238                           
   239                           
   240                           ;main.c: 41: char ch = '\0';
   241  07EE  01F3               	clrf	main@ch
   242  07EF                     l631:	
   243                           ;main.c: 42: do {
   244                           
   245                           
   246                           ;main.c: 43: ch = UART_read_byte();
   247  07EF  118A  27B6  118A   	fcall	_UART_read_byte
   248  07F2  00F1               	movwf	??_main
   249  07F3  0871               	movf	??_main,w
   250  07F4  00F3               	movwf	main@ch
   251                           
   252                           ;main.c: 44: } while (ch == '\0');
   253  07F5  0873               	movf	main@ch,w
   254  07F6  1903               	btfsc	3,2
   255  07F7  2FEF               	goto	l631
   256                           
   257                           ;main.c: 46: UART_send_byte(ch);
   258  07F8  0873               	movf	main@ch,w
   259  07F9  118A  27AC  118A   	fcall	_UART_send_byte
   260  07FC  2FEE               	goto	l629
   261  07FD                     __end_of_main:	
   262                           
   263                           	psect	text1
   264  07AC                     __ptext1:	
   265 ;; *************** function _UART_send_byte *****************
   266 ;; Defined at:
   267 ;;		line 40 in file "uart.h"
   268 ;; Parameters:    Size  Location     Type
   269 ;;  single_byte     1    wreg     unsigned char 
   270 ;; Auto vars:     Size  Location     Type
   271 ;;  single_byte     1    0[COMMON] unsigned char 
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   281 ;;      Params:         0       0       0       0       0
   282 ;;      Locals:         1       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0
   284 ;;      Totals:         1       0       0       0       0
   285 ;;Total ram usage:        1 bytes
   286 ;; Hardware stack levels used:    1
   287 ;; This function calls:
   288 ;;		Nothing
   289 ;; This function is called by:
   290 ;;		_main
   291 ;;		_UART_send_string
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           
   296                           ;psect for function _UART_send_byte
   297  07AC                     _UART_send_byte:	
   298                           
   299                           ;incstack = 0
   300                           ; Regs used in _UART_send_byte: [wreg]
   301                           ;UART_send_byte@single_byte stored from wreg
   302  07AC  00F0               	movwf	UART_send_byte@single_byte
   303  07AD                     l48:	
   304                           ;uart.h: 43: while(! TRMT);
   305                           
   306  07AD  1683               	bsf	3,5	;RP0=1, select bank1
   307  07AE  1303               	bcf	3,6	;RP1=0, select bank1
   308  07AF  1C98               	btfss	24,1	;volatile
   309  07B0  2FAD               	goto	l48
   310                           
   311                           ;uart.h: 44: TXREG = single_byte;
   312  07B1  0870               	movf	UART_send_byte@single_byte,w
   313  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   314  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   315  07B4  0099               	movwf	25	;volatile
   316  07B5  0008               	return
   317  07B6                     __end_of_UART_send_byte:	
   318                           
   319                           	psect	text2
   320  07B6                     __ptext2:	
   321 ;; *************** function _UART_read_byte *****************
   322 ;; Defined at:
   323 ;;		line 47 in file "uart.h"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;		None
   328 ;; Return value:  Size  Location     Type
   329 ;;                  1    wreg      unsigned char 
   330 ;; Registers used:
   331 ;;		wreg
   332 ;; Tracked objects:
   333 ;;		On entry : 0/0
   334 ;;		On exit  : 0/0
   335 ;;		Unchanged: 0/0
   336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   337 ;;      Params:         0       0       0       0       0
   338 ;;      Locals:         0       0       0       0       0
   339 ;;      Temps:          0       0       0       0       0
   340 ;;      Totals:         0       0       0       0       0
   341 ;;Total ram usage:        0 bytes
   342 ;; Hardware stack levels used:    1
   343 ;; This function calls:
   344 ;;		Nothing
   345 ;; This function is called by:
   346 ;;		_main
   347 ;;		_UART_read_string
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           
   352                           ;psect for function _UART_read_byte
   353  07B6                     _UART_read_byte:	
   354                           
   355                           ;uart.h: 51: if(! RCIF){
   356                           
   357                           ;incstack = 0
   358                           ; Regs used in _UART_read_byte: [wreg]
   359  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   360  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   361  07B8  1A8C               	btfsc	12,5	;volatile
   362  07B9  2FBC               	goto	l54
   363                           
   364                           ;uart.h: 52: return '\0';
   365  07BA  3000               	movlw	0
   366  07BB  0008               	return
   367  07BC                     l54:	
   368                           
   369                           ;uart.h: 53: }
   370                           ;uart.h: 56: if(RCSTAbits.OERR){
   371  07BC  1C98               	btfss	24,1	;volatile
   372  07BD  2FC2               	goto	l577
   373                           
   374                           ;uart.h: 58: CREN = 0;
   375  07BE  1218               	bcf	24,4	;volatile
   376                           
   377                           ;uart.h: 59: CREN = 1;
   378  07BF  1618               	bsf	24,4	;volatile
   379                           
   380                           ;uart.h: 61: return '\0';
   381  07C0  3000               	movlw	0
   382  07C1  0008               	return
   383  07C2                     l577:	
   384                           
   385                           ;uart.h: 62: }
   386                           ;uart.h: 64: return RCREG;
   387  07C2  081A               	movf	26,w	;volatile
   388  07C3  0008               	return
   389  07C4                     __end_of_UART_read_byte:	
   390                           
   391                           	psect	text3
   392  07D3                     __ptext3:	
   393 ;; *************** function _UART_Init *****************
   394 ;; Defined at:
   395 ;;		line 14 in file "uart.h"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   409 ;;      Params:         0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0
   412 ;;      Totals:         0       0       0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels used:    1
   415 ;; This function calls:
   416 ;;		Nothing
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           
   423                           ;psect for function _UART_Init
   424  07D3                     _UART_Init:	
   425                           
   426                           ;uart.h: 20: TRISB5 = 0;
   427                           
   428                           ;incstack = 0
   429                           ; Regs used in _UART_Init: [wreg]
   430  07D3  1683               	bsf	3,5	;RP0=1, select bank1
   431  07D4  1303               	bcf	3,6	;RP1=0, select bank1
   432  07D5  1286               	bcf	6,5	;volatile
   433                           
   434                           ;uart.h: 21: TRISB2 = 1;
   435  07D6  1506               	bsf	6,2	;volatile
   436                           
   437                           ;uart.h: 24: BRGH = 1;
   438  07D7  1518               	bsf	24,2	;volatile
   439                           
   440                           ;uart.h: 25: SPBRG = 77;
   441  07D8  304D               	movlw	77
   442  07D9  0099               	movwf	25	;volatile
   443                           
   444                           ;uart.h: 28: SYNC = 0;
   445  07DA  1218               	bcf	24,4	;volatile
   446                           
   447                           ;uart.h: 29: SPEN = 1;
   448  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   449  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   450  07DD  1798               	bsf	24,7	;volatile
   451                           
   452                           ;uart.h: 32: TX9 = 0;
   453  07DE  1683               	bsf	3,5	;RP0=1, select bank1
   454  07DF  1303               	bcf	3,6	;RP1=0, select bank1
   455  07E0  1318               	bcf	24,6	;volatile
   456                           
   457                           ;uart.h: 33: TXEN = 1;
   458  07E1  1698               	bsf	24,5	;volatile
   459                           
   460                           ;uart.h: 36: RX9 = 0;
   461  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   462  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   463  07E4  1318               	bcf	24,6	;volatile
   464                           
   465                           ;uart.h: 37: CREN = 1;
   466  07E5  1618               	bsf	24,4	;volatile
   467  07E6  0008               	return
   468  07E7                     __end_of_UART_Init:	
   469                           
   470                           	psect	text4
   471  07C4                     __ptext4:	
   472 ;; *************** function _Syst_Init *****************
   473 ;; Defined at:
   474 ;;		line 10 in file "main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		status,2
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0
   491 ;;      Totals:         0       0       0       0       0
   492 ;;Total ram usage:        0 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _Syst_Init
   503  07C4                     _Syst_Init:	
   504                           
   505                           ;main.c: 14: TRISA = TRISB = 0;
   506                           
   507                           ;incstack = 0
   508                           ; Regs used in _Syst_Init: [status,2]
   509  07C4  1683               	bsf	3,5	;RP0=1, select bank1
   510  07C5  1303               	bcf	3,6	;RP1=0, select bank1
   511  07C6  0186               	clrf	6	;volatile
   512  07C7  0185               	clrf	5	;volatile
   513                           
   514                           ;main.c: 17: PORTA = PORTB = 0;
   515  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   516  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   517  07CA  0186               	clrf	6	;volatile
   518  07CB  0185               	clrf	5	;volatile
   519                           
   520                           ;main.c: 22: GIE = PEIE = 1;
   521  07CC  170B               	bsf	11,6	;volatile
   522  07CD  1F0B               	btfss	11,6	;volatile
   523  07CE  2FD1               	goto	u40
   524  07CF  178B               	bsf	11,7	;volatile
   525  07D0  0008               	return
   526  07D1                     u40:	
   527  07D1  138B               	bcf	11,7	;volatile
   528  07D2  0008               	return
   529  07D3                     __end_of_Syst_Init:	
   530  007E                     btemp	set	126	;btemp
   531  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    main@str	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_UART_send_byte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0      45
                                              1 COMMON     3     3      0
                          _Syst_Init
                          _UART_Init
                     _UART_read_byte
                     _UART_send_byte
 ---------------------------------------------------------------------------------
 (1) _UART_send_byte                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_read_byte                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Syst_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Syst_Init
   _UART_Init
   _UART_read_byte
   _UART_send_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Wed Feb 28 15:17:48 2018

              __CFG_CP$OFF 0000                         l54 07BC                         l48 07AD  
                       u40 07D1                        l631 07EF                        l629 07EE  
                      l577 07C2                        _GIE 005F               __CFG_CPD$OFF 0000  
                      _RX9 00C6                        _TX9 04C6               __CFG_IESO$ON 0000  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       _BRGH 04C2  
                     _CREN 00C4                       _PEIE 005E                       _RCIF 0065  
                     _SPEN 00C7                       _TRMT 04C1                       _TXEN 04C5  
                     _SYNC 04C4               __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000  
                     _main 07E7                       btemp 007E              __CFG_BOREN$ON 0000  
                     start 0000                      ?_main 0070              __CFG_WDTE$OFF 0000  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _TRISA 0085                      _TRISB 0086  
                    _TXREG 0019             __CFG_CCPMX$RB0 0000         __size_of_UART_Init 0014  
                    status 0003                      wtemp0 007E             __CFG_MCLRE$OFF 0000  
          __initialization 07FD               __end_of_main 07FD                     ??_main 0071  
                   _TRISB2 0432                     _TRISB5 0435             __CFG_PWRTE$OFF 0000  
        __end_of_UART_Init 07E7                     main@ch 0073    __end_of__initialization 07FD  
       __size_of_Syst_Init 000F             __pcstackCOMMON 0070                 __pmaintext 07E7  
  __size_of_UART_read_byte 000E          __end_of_Syst_Init 07D3    __size_of_UART_send_byte 000A  
                  __ptext1 07AC                    __ptext2 07B6                    __ptext3 07D3  
                  __ptext4 07C4                    main@str 0072       end_of_initialization 07FD  
                _RCSTAbits 0018                  _UART_Init 07D3                 ?_UART_Init 0070  
           _UART_read_byte 07B6        start_initialization 07FD             _UART_send_byte 07AC  
   __end_of_UART_read_byte 07C4     __end_of_UART_send_byte 07B6                  ___latbits 0001  
                _Syst_Init 07C4            ?_UART_read_byte 0070                ??_UART_Init 0070  
          ?_UART_send_byte 0070                 ?_Syst_Init 0070  UART_send_byte@single_byte 0070  
              ??_Syst_Init 0070              __size_of_main 0016           ??_UART_read_byte 0070  
         ??_UART_send_byte 0070  
