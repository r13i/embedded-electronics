Version 3.2 HI-TECH Software Intermediate Code
"2436 C:\Program Files (x86)\Microchip\xc8\v1.40\include\pic16f876a.h
[v _TRISB3 `Vb ~T0 @X0 0 e@1075 ]
"2438
[v _TRISB4 `Vb ~T0 @X0 0 e@1076 ]
"2286
[v _RB4 `Vb ~T0 @X0 0 e@52 ]
"1119
[v _OPTION_REG `Vuc ~T0 @X0 0 e@129 ]
"2370
[v _T0CS `Vb ~T0 @X0 0 e@1037 ]
"55
[v _TMR0 `Vuc ~T0 @X0 0 e@1 ]
"2394
[v _TMR0IF `Vb ~T0 @X0 0 e@90 ]
"2392
[v _TMR0IE `Vb ~T0 @X0 0 e@93 ]
"2220
[v _GIE `Vb ~T0 @X0 0 e@95 ]
"2254
[v _PEIE `Vb ~T0 @X0 0 e@94 ]
"2284
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f876a.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 C:\Program Files (x86)\Microchip\xc8\v1.40\include\pic16f876a.h
[; ;pic16f876a.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f876a.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f876a.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f876a.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f876a.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f876a.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f876a.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f876a.h: 72: typedef union {
[; ;pic16f876a.h: 73: struct {
[; ;pic16f876a.h: 74: unsigned C :1;
[; ;pic16f876a.h: 75: unsigned DC :1;
[; ;pic16f876a.h: 76: unsigned Z :1;
[; ;pic16f876a.h: 77: unsigned nPD :1;
[; ;pic16f876a.h: 78: unsigned nTO :1;
[; ;pic16f876a.h: 79: unsigned RP :2;
[; ;pic16f876a.h: 80: unsigned IRP :1;
[; ;pic16f876a.h: 81: };
[; ;pic16f876a.h: 82: struct {
[; ;pic16f876a.h: 83: unsigned :5;
[; ;pic16f876a.h: 84: unsigned RP0 :1;
[; ;pic16f876a.h: 85: unsigned RP1 :1;
[; ;pic16f876a.h: 86: };
[; ;pic16f876a.h: 87: struct {
[; ;pic16f876a.h: 88: unsigned CARRY :1;
[; ;pic16f876a.h: 89: unsigned :1;
[; ;pic16f876a.h: 90: unsigned ZERO :1;
[; ;pic16f876a.h: 91: };
[; ;pic16f876a.h: 92: } STATUSbits_t;
[; ;pic16f876a.h: 93: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f876a.h: 152: extern volatile unsigned char FSR @ 0x004;
"154
[; ;pic16f876a.h: 154: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f876a.h: 158: extern volatile unsigned char PORTA @ 0x005;
"160
[; ;pic16f876a.h: 160: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f876a.h: 163: typedef union {
[; ;pic16f876a.h: 164: struct {
[; ;pic16f876a.h: 165: unsigned RA0 :1;
[; ;pic16f876a.h: 166: unsigned RA1 :1;
[; ;pic16f876a.h: 167: unsigned RA2 :1;
[; ;pic16f876a.h: 168: unsigned RA3 :1;
[; ;pic16f876a.h: 169: unsigned RA4 :1;
[; ;pic16f876a.h: 170: unsigned RA5 :1;
[; ;pic16f876a.h: 171: };
[; ;pic16f876a.h: 172: } PORTAbits_t;
[; ;pic16f876a.h: 173: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f876a.h: 207: extern volatile unsigned char PORTB @ 0x006;
"209
[; ;pic16f876a.h: 209: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f876a.h: 212: typedef union {
[; ;pic16f876a.h: 213: struct {
[; ;pic16f876a.h: 214: unsigned RB0 :1;
[; ;pic16f876a.h: 215: unsigned RB1 :1;
[; ;pic16f876a.h: 216: unsigned RB2 :1;
[; ;pic16f876a.h: 217: unsigned RB3 :1;
[; ;pic16f876a.h: 218: unsigned RB4 :1;
[; ;pic16f876a.h: 219: unsigned RB5 :1;
[; ;pic16f876a.h: 220: unsigned RB6 :1;
[; ;pic16f876a.h: 221: unsigned RB7 :1;
[; ;pic16f876a.h: 222: };
[; ;pic16f876a.h: 223: } PORTBbits_t;
[; ;pic16f876a.h: 224: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f876a.h: 268: extern volatile unsigned char PORTC @ 0x007;
"270
[; ;pic16f876a.h: 270: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f876a.h: 273: typedef union {
[; ;pic16f876a.h: 274: struct {
[; ;pic16f876a.h: 275: unsigned RC0 :1;
[; ;pic16f876a.h: 276: unsigned RC1 :1;
[; ;pic16f876a.h: 277: unsigned RC2 :1;
[; ;pic16f876a.h: 278: unsigned RC3 :1;
[; ;pic16f876a.h: 279: unsigned RC4 :1;
[; ;pic16f876a.h: 280: unsigned RC5 :1;
[; ;pic16f876a.h: 281: unsigned RC6 :1;
[; ;pic16f876a.h: 282: unsigned RC7 :1;
[; ;pic16f876a.h: 283: };
[; ;pic16f876a.h: 284: } PORTCbits_t;
[; ;pic16f876a.h: 285: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f876a.h: 329: extern volatile unsigned char PCLATH @ 0x00A;
"331
[; ;pic16f876a.h: 331: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f876a.h: 334: typedef union {
[; ;pic16f876a.h: 335: struct {
[; ;pic16f876a.h: 336: unsigned PCLATH :5;
[; ;pic16f876a.h: 337: };
[; ;pic16f876a.h: 338: } PCLATHbits_t;
[; ;pic16f876a.h: 339: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f876a.h: 348: extern volatile unsigned char INTCON @ 0x00B;
"350
[; ;pic16f876a.h: 350: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f876a.h: 353: typedef union {
[; ;pic16f876a.h: 354: struct {
[; ;pic16f876a.h: 355: unsigned RBIF :1;
[; ;pic16f876a.h: 356: unsigned INTF :1;
[; ;pic16f876a.h: 357: unsigned TMR0IF :1;
[; ;pic16f876a.h: 358: unsigned RBIE :1;
[; ;pic16f876a.h: 359: unsigned INTE :1;
[; ;pic16f876a.h: 360: unsigned TMR0IE :1;
[; ;pic16f876a.h: 361: unsigned PEIE :1;
[; ;pic16f876a.h: 362: unsigned GIE :1;
[; ;pic16f876a.h: 363: };
[; ;pic16f876a.h: 364: struct {
[; ;pic16f876a.h: 365: unsigned :2;
[; ;pic16f876a.h: 366: unsigned T0IF :1;
[; ;pic16f876a.h: 367: unsigned :2;
[; ;pic16f876a.h: 368: unsigned T0IE :1;
[; ;pic16f876a.h: 369: };
[; ;pic16f876a.h: 370: } INTCONbits_t;
[; ;pic16f876a.h: 371: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f876a.h: 425: extern volatile unsigned char PIR1 @ 0x00C;
"427
[; ;pic16f876a.h: 427: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f876a.h: 430: typedef union {
[; ;pic16f876a.h: 431: struct {
[; ;pic16f876a.h: 432: unsigned TMR1IF :1;
[; ;pic16f876a.h: 433: unsigned TMR2IF :1;
[; ;pic16f876a.h: 434: unsigned CCP1IF :1;
[; ;pic16f876a.h: 435: unsigned SSPIF :1;
[; ;pic16f876a.h: 436: unsigned TXIF :1;
[; ;pic16f876a.h: 437: unsigned RCIF :1;
[; ;pic16f876a.h: 438: unsigned ADIF :1;
[; ;pic16f876a.h: 439: };
[; ;pic16f876a.h: 440: } PIR1bits_t;
[; ;pic16f876a.h: 441: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f876a.h: 480: extern volatile unsigned char PIR2 @ 0x00D;
"482
[; ;pic16f876a.h: 482: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f876a.h: 485: typedef union {
[; ;pic16f876a.h: 486: struct {
[; ;pic16f876a.h: 487: unsigned CCP2IF :1;
[; ;pic16f876a.h: 488: unsigned :2;
[; ;pic16f876a.h: 489: unsigned BCLIF :1;
[; ;pic16f876a.h: 490: unsigned EEIF :1;
[; ;pic16f876a.h: 491: unsigned :1;
[; ;pic16f876a.h: 492: unsigned CMIF :1;
[; ;pic16f876a.h: 493: };
[; ;pic16f876a.h: 494: } PIR2bits_t;
[; ;pic16f876a.h: 495: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f876a.h: 519: extern volatile unsigned short TMR1 @ 0x00E;
"521
[; ;pic16f876a.h: 521: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f876a.h: 525: extern volatile unsigned char TMR1L @ 0x00E;
"527
[; ;pic16f876a.h: 527: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f876a.h: 531: extern volatile unsigned char TMR1H @ 0x00F;
"533
[; ;pic16f876a.h: 533: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f876a.h: 537: extern volatile unsigned char T1CON @ 0x010;
"539
[; ;pic16f876a.h: 539: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f876a.h: 542: typedef union {
[; ;pic16f876a.h: 543: struct {
[; ;pic16f876a.h: 544: unsigned TMR1ON :1;
[; ;pic16f876a.h: 545: unsigned TMR1CS :1;
[; ;pic16f876a.h: 546: unsigned nT1SYNC :1;
[; ;pic16f876a.h: 547: unsigned T1OSCEN :1;
[; ;pic16f876a.h: 548: unsigned T1CKPS :2;
[; ;pic16f876a.h: 549: };
[; ;pic16f876a.h: 550: struct {
[; ;pic16f876a.h: 551: unsigned :2;
[; ;pic16f876a.h: 552: unsigned T1SYNC :1;
[; ;pic16f876a.h: 553: unsigned :1;
[; ;pic16f876a.h: 554: unsigned T1CKPS0 :1;
[; ;pic16f876a.h: 555: unsigned T1CKPS1 :1;
[; ;pic16f876a.h: 556: };
[; ;pic16f876a.h: 557: struct {
[; ;pic16f876a.h: 558: unsigned :2;
[; ;pic16f876a.h: 559: unsigned T1INSYNC :1;
[; ;pic16f876a.h: 560: };
[; ;pic16f876a.h: 561: } T1CONbits_t;
[; ;pic16f876a.h: 562: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f876a.h: 611: extern volatile unsigned char TMR2 @ 0x011;
"613
[; ;pic16f876a.h: 613: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f876a.h: 617: extern volatile unsigned char T2CON @ 0x012;
"619
[; ;pic16f876a.h: 619: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f876a.h: 622: typedef union {
[; ;pic16f876a.h: 623: struct {
[; ;pic16f876a.h: 624: unsigned T2CKPS :2;
[; ;pic16f876a.h: 625: unsigned TMR2ON :1;
[; ;pic16f876a.h: 626: unsigned TOUTPS :4;
[; ;pic16f876a.h: 627: };
[; ;pic16f876a.h: 628: struct {
[; ;pic16f876a.h: 629: unsigned T2CKPS0 :1;
[; ;pic16f876a.h: 630: unsigned T2CKPS1 :1;
[; ;pic16f876a.h: 631: unsigned :1;
[; ;pic16f876a.h: 632: unsigned TOUTPS0 :1;
[; ;pic16f876a.h: 633: unsigned TOUTPS1 :1;
[; ;pic16f876a.h: 634: unsigned TOUTPS2 :1;
[; ;pic16f876a.h: 635: unsigned TOUTPS3 :1;
[; ;pic16f876a.h: 636: };
[; ;pic16f876a.h: 637: } T2CONbits_t;
[; ;pic16f876a.h: 638: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f876a.h: 687: extern volatile unsigned char SSPBUF @ 0x013;
"689
[; ;pic16f876a.h: 689: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f876a.h: 693: extern volatile unsigned char SSPCON @ 0x014;
"695
[; ;pic16f876a.h: 695: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f876a.h: 698: typedef union {
[; ;pic16f876a.h: 699: struct {
[; ;pic16f876a.h: 700: unsigned SSPM :4;
[; ;pic16f876a.h: 701: unsigned CKP :1;
[; ;pic16f876a.h: 702: unsigned SSPEN :1;
[; ;pic16f876a.h: 703: unsigned SSPOV :1;
[; ;pic16f876a.h: 704: unsigned WCOL :1;
[; ;pic16f876a.h: 705: };
[; ;pic16f876a.h: 706: struct {
[; ;pic16f876a.h: 707: unsigned SSPM0 :1;
[; ;pic16f876a.h: 708: unsigned SSPM1 :1;
[; ;pic16f876a.h: 709: unsigned SSPM2 :1;
[; ;pic16f876a.h: 710: unsigned SSPM3 :1;
[; ;pic16f876a.h: 711: };
[; ;pic16f876a.h: 712: } SSPCONbits_t;
[; ;pic16f876a.h: 713: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f876a.h: 762: extern volatile unsigned short CCPR1 @ 0x015;
"764
[; ;pic16f876a.h: 764: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f876a.h: 768: extern volatile unsigned char CCPR1L @ 0x015;
"770
[; ;pic16f876a.h: 770: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f876a.h: 774: extern volatile unsigned char CCPR1H @ 0x016;
"776
[; ;pic16f876a.h: 776: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f876a.h: 780: extern volatile unsigned char CCP1CON @ 0x017;
"782
[; ;pic16f876a.h: 782: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f876a.h: 785: typedef union {
[; ;pic16f876a.h: 786: struct {
[; ;pic16f876a.h: 787: unsigned CCP1M :4;
[; ;pic16f876a.h: 788: unsigned CCP1Y :1;
[; ;pic16f876a.h: 789: unsigned CCP1X :1;
[; ;pic16f876a.h: 790: };
[; ;pic16f876a.h: 791: struct {
[; ;pic16f876a.h: 792: unsigned CCP1M0 :1;
[; ;pic16f876a.h: 793: unsigned CCP1M1 :1;
[; ;pic16f876a.h: 794: unsigned CCP1M2 :1;
[; ;pic16f876a.h: 795: unsigned CCP1M3 :1;
[; ;pic16f876a.h: 796: };
[; ;pic16f876a.h: 797: } CCP1CONbits_t;
[; ;pic16f876a.h: 798: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f876a.h: 837: extern volatile unsigned char RCSTA @ 0x018;
"839
[; ;pic16f876a.h: 839: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f876a.h: 842: typedef union {
[; ;pic16f876a.h: 843: struct {
[; ;pic16f876a.h: 844: unsigned RX9D :1;
[; ;pic16f876a.h: 845: unsigned OERR :1;
[; ;pic16f876a.h: 846: unsigned FERR :1;
[; ;pic16f876a.h: 847: unsigned ADDEN :1;
[; ;pic16f876a.h: 848: unsigned CREN :1;
[; ;pic16f876a.h: 849: unsigned SREN :1;
[; ;pic16f876a.h: 850: unsigned RX9 :1;
[; ;pic16f876a.h: 851: unsigned SPEN :1;
[; ;pic16f876a.h: 852: };
[; ;pic16f876a.h: 853: struct {
[; ;pic16f876a.h: 854: unsigned RCD8 :1;
[; ;pic16f876a.h: 855: unsigned :5;
[; ;pic16f876a.h: 856: unsigned RC9 :1;
[; ;pic16f876a.h: 857: };
[; ;pic16f876a.h: 858: struct {
[; ;pic16f876a.h: 859: unsigned :6;
[; ;pic16f876a.h: 860: unsigned nRC8 :1;
[; ;pic16f876a.h: 861: };
[; ;pic16f876a.h: 862: struct {
[; ;pic16f876a.h: 863: unsigned :6;
[; ;pic16f876a.h: 864: unsigned RC8_9 :1;
[; ;pic16f876a.h: 865: };
[; ;pic16f876a.h: 866: } RCSTAbits_t;
[; ;pic16f876a.h: 867: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f876a.h: 931: extern volatile unsigned char TXREG @ 0x019;
"933
[; ;pic16f876a.h: 933: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f876a.h: 937: extern volatile unsigned char RCREG @ 0x01A;
"939
[; ;pic16f876a.h: 939: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f876a.h: 943: extern volatile unsigned short CCPR2 @ 0x01B;
"945
[; ;pic16f876a.h: 945: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f876a.h: 949: extern volatile unsigned char CCPR2L @ 0x01B;
"951
[; ;pic16f876a.h: 951: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f876a.h: 955: extern volatile unsigned char CCPR2H @ 0x01C;
"957
[; ;pic16f876a.h: 957: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f876a.h: 961: extern volatile unsigned char CCP2CON @ 0x01D;
"963
[; ;pic16f876a.h: 963: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f876a.h: 966: typedef union {
[; ;pic16f876a.h: 967: struct {
[; ;pic16f876a.h: 968: unsigned CCP2M :4;
[; ;pic16f876a.h: 969: unsigned CCP2Y :1;
[; ;pic16f876a.h: 970: unsigned CCP2X :1;
[; ;pic16f876a.h: 971: };
[; ;pic16f876a.h: 972: struct {
[; ;pic16f876a.h: 973: unsigned CCP2M0 :1;
[; ;pic16f876a.h: 974: unsigned CCP2M1 :1;
[; ;pic16f876a.h: 975: unsigned CCP2M2 :1;
[; ;pic16f876a.h: 976: unsigned CCP2M3 :1;
[; ;pic16f876a.h: 977: };
[; ;pic16f876a.h: 978: } CCP2CONbits_t;
[; ;pic16f876a.h: 979: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f876a.h: 1018: extern volatile unsigned char ADRESH @ 0x01E;
"1020
[; ;pic16f876a.h: 1020: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f876a.h: 1024: extern volatile unsigned char ADCON0 @ 0x01F;
"1026
[; ;pic16f876a.h: 1026: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f876a.h: 1029: typedef union {
[; ;pic16f876a.h: 1030: struct {
[; ;pic16f876a.h: 1031: unsigned ADON :1;
[; ;pic16f876a.h: 1032: unsigned :1;
[; ;pic16f876a.h: 1033: unsigned GO_nDONE :1;
[; ;pic16f876a.h: 1034: unsigned CHS :3;
[; ;pic16f876a.h: 1035: unsigned ADCS :2;
[; ;pic16f876a.h: 1036: };
[; ;pic16f876a.h: 1037: struct {
[; ;pic16f876a.h: 1038: unsigned :2;
[; ;pic16f876a.h: 1039: unsigned GO :1;
[; ;pic16f876a.h: 1040: unsigned CHS0 :1;
[; ;pic16f876a.h: 1041: unsigned CHS1 :1;
[; ;pic16f876a.h: 1042: unsigned CHS2 :1;
[; ;pic16f876a.h: 1043: unsigned ADCS0 :1;
[; ;pic16f876a.h: 1044: unsigned ADCS1 :1;
[; ;pic16f876a.h: 1045: };
[; ;pic16f876a.h: 1046: struct {
[; ;pic16f876a.h: 1047: unsigned :2;
[; ;pic16f876a.h: 1048: unsigned nDONE :1;
[; ;pic16f876a.h: 1049: };
[; ;pic16f876a.h: 1050: struct {
[; ;pic16f876a.h: 1051: unsigned :2;
[; ;pic16f876a.h: 1052: unsigned GO_DONE :1;
[; ;pic16f876a.h: 1053: };
[; ;pic16f876a.h: 1054: } ADCON0bits_t;
[; ;pic16f876a.h: 1055: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f876a.h: 1119: extern volatile unsigned char OPTION_REG @ 0x081;
"1121
[; ;pic16f876a.h: 1121: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f876a.h: 1124: typedef union {
[; ;pic16f876a.h: 1125: struct {
[; ;pic16f876a.h: 1126: unsigned PS :3;
[; ;pic16f876a.h: 1127: unsigned PSA :1;
[; ;pic16f876a.h: 1128: unsigned T0SE :1;
[; ;pic16f876a.h: 1129: unsigned T0CS :1;
[; ;pic16f876a.h: 1130: unsigned INTEDG :1;
[; ;pic16f876a.h: 1131: unsigned nRBPU :1;
[; ;pic16f876a.h: 1132: };
[; ;pic16f876a.h: 1133: struct {
[; ;pic16f876a.h: 1134: unsigned PS0 :1;
[; ;pic16f876a.h: 1135: unsigned PS1 :1;
[; ;pic16f876a.h: 1136: unsigned PS2 :1;
[; ;pic16f876a.h: 1137: };
[; ;pic16f876a.h: 1138: } OPTION_REGbits_t;
[; ;pic16f876a.h: 1139: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f876a.h: 1188: extern volatile unsigned char TRISA @ 0x085;
"1190
[; ;pic16f876a.h: 1190: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f876a.h: 1193: typedef union {
[; ;pic16f876a.h: 1194: struct {
[; ;pic16f876a.h: 1195: unsigned TRISA0 :1;
[; ;pic16f876a.h: 1196: unsigned TRISA1 :1;
[; ;pic16f876a.h: 1197: unsigned TRISA2 :1;
[; ;pic16f876a.h: 1198: unsigned TRISA3 :1;
[; ;pic16f876a.h: 1199: unsigned TRISA4 :1;
[; ;pic16f876a.h: 1200: unsigned TRISA5 :1;
[; ;pic16f876a.h: 1201: };
[; ;pic16f876a.h: 1202: } TRISAbits_t;
[; ;pic16f876a.h: 1203: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f876a.h: 1237: extern volatile unsigned char TRISB @ 0x086;
"1239
[; ;pic16f876a.h: 1239: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f876a.h: 1242: typedef union {
[; ;pic16f876a.h: 1243: struct {
[; ;pic16f876a.h: 1244: unsigned TRISB0 :1;
[; ;pic16f876a.h: 1245: unsigned TRISB1 :1;
[; ;pic16f876a.h: 1246: unsigned TRISB2 :1;
[; ;pic16f876a.h: 1247: unsigned TRISB3 :1;
[; ;pic16f876a.h: 1248: unsigned TRISB4 :1;
[; ;pic16f876a.h: 1249: unsigned TRISB5 :1;
[; ;pic16f876a.h: 1250: unsigned TRISB6 :1;
[; ;pic16f876a.h: 1251: unsigned TRISB7 :1;
[; ;pic16f876a.h: 1252: };
[; ;pic16f876a.h: 1253: } TRISBbits_t;
[; ;pic16f876a.h: 1254: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f876a.h: 1298: extern volatile unsigned char TRISC @ 0x087;
"1300
[; ;pic16f876a.h: 1300: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f876a.h: 1303: typedef union {
[; ;pic16f876a.h: 1304: struct {
[; ;pic16f876a.h: 1305: unsigned TRISC0 :1;
[; ;pic16f876a.h: 1306: unsigned TRISC1 :1;
[; ;pic16f876a.h: 1307: unsigned TRISC2 :1;
[; ;pic16f876a.h: 1308: unsigned TRISC3 :1;
[; ;pic16f876a.h: 1309: unsigned TRISC4 :1;
[; ;pic16f876a.h: 1310: unsigned TRISC5 :1;
[; ;pic16f876a.h: 1311: unsigned TRISC6 :1;
[; ;pic16f876a.h: 1312: unsigned TRISC7 :1;
[; ;pic16f876a.h: 1313: };
[; ;pic16f876a.h: 1314: } TRISCbits_t;
[; ;pic16f876a.h: 1315: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f876a.h: 1359: extern volatile unsigned char PIE1 @ 0x08C;
"1361
[; ;pic16f876a.h: 1361: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f876a.h: 1364: typedef union {
[; ;pic16f876a.h: 1365: struct {
[; ;pic16f876a.h: 1366: unsigned TMR1IE :1;
[; ;pic16f876a.h: 1367: unsigned TMR2IE :1;
[; ;pic16f876a.h: 1368: unsigned CCP1IE :1;
[; ;pic16f876a.h: 1369: unsigned SSPIE :1;
[; ;pic16f876a.h: 1370: unsigned TXIE :1;
[; ;pic16f876a.h: 1371: unsigned RCIE :1;
[; ;pic16f876a.h: 1372: unsigned ADIE :1;
[; ;pic16f876a.h: 1373: };
[; ;pic16f876a.h: 1374: } PIE1bits_t;
[; ;pic16f876a.h: 1375: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f876a.h: 1414: extern volatile unsigned char PIE2 @ 0x08D;
"1416
[; ;pic16f876a.h: 1416: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f876a.h: 1419: typedef union {
[; ;pic16f876a.h: 1420: struct {
[; ;pic16f876a.h: 1421: unsigned CCP2IE :1;
[; ;pic16f876a.h: 1422: unsigned :2;
[; ;pic16f876a.h: 1423: unsigned BCLIE :1;
[; ;pic16f876a.h: 1424: unsigned EEIE :1;
[; ;pic16f876a.h: 1425: unsigned :1;
[; ;pic16f876a.h: 1426: unsigned CMIE :1;
[; ;pic16f876a.h: 1427: };
[; ;pic16f876a.h: 1428: } PIE2bits_t;
[; ;pic16f876a.h: 1429: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f876a.h: 1453: extern volatile unsigned char PCON @ 0x08E;
"1455
[; ;pic16f876a.h: 1455: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f876a.h: 1458: typedef union {
[; ;pic16f876a.h: 1459: struct {
[; ;pic16f876a.h: 1460: unsigned nBOR :1;
[; ;pic16f876a.h: 1461: unsigned nPOR :1;
[; ;pic16f876a.h: 1462: };
[; ;pic16f876a.h: 1463: struct {
[; ;pic16f876a.h: 1464: unsigned nBO :1;
[; ;pic16f876a.h: 1465: };
[; ;pic16f876a.h: 1466: } PCONbits_t;
[; ;pic16f876a.h: 1467: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f876a.h: 1486: extern volatile unsigned char SSPCON2 @ 0x091;
"1488
[; ;pic16f876a.h: 1488: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f876a.h: 1491: typedef union {
[; ;pic16f876a.h: 1492: struct {
[; ;pic16f876a.h: 1493: unsigned SEN :1;
[; ;pic16f876a.h: 1494: unsigned RSEN :1;
[; ;pic16f876a.h: 1495: unsigned PEN :1;
[; ;pic16f876a.h: 1496: unsigned RCEN :1;
[; ;pic16f876a.h: 1497: unsigned ACKEN :1;
[; ;pic16f876a.h: 1498: unsigned ACKDT :1;
[; ;pic16f876a.h: 1499: unsigned ACKSTAT :1;
[; ;pic16f876a.h: 1500: unsigned GCEN :1;
[; ;pic16f876a.h: 1501: };
[; ;pic16f876a.h: 1502: } SSPCON2bits_t;
[; ;pic16f876a.h: 1503: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f876a.h: 1547: extern volatile unsigned char PR2 @ 0x092;
"1549
[; ;pic16f876a.h: 1549: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f876a.h: 1553: extern volatile unsigned char SSPADD @ 0x093;
"1555
[; ;pic16f876a.h: 1555: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f876a.h: 1559: extern volatile unsigned char SSPSTAT @ 0x094;
"1561
[; ;pic16f876a.h: 1561: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f876a.h: 1564: typedef union {
[; ;pic16f876a.h: 1565: struct {
[; ;pic16f876a.h: 1566: unsigned BF :1;
[; ;pic16f876a.h: 1567: unsigned UA :1;
[; ;pic16f876a.h: 1568: unsigned R_nW :1;
[; ;pic16f876a.h: 1569: unsigned S :1;
[; ;pic16f876a.h: 1570: unsigned P :1;
[; ;pic16f876a.h: 1571: unsigned D_nA :1;
[; ;pic16f876a.h: 1572: unsigned CKE :1;
[; ;pic16f876a.h: 1573: unsigned SMP :1;
[; ;pic16f876a.h: 1574: };
[; ;pic16f876a.h: 1575: struct {
[; ;pic16f876a.h: 1576: unsigned :2;
[; ;pic16f876a.h: 1577: unsigned R :1;
[; ;pic16f876a.h: 1578: unsigned :2;
[; ;pic16f876a.h: 1579: unsigned D :1;
[; ;pic16f876a.h: 1580: };
[; ;pic16f876a.h: 1581: struct {
[; ;pic16f876a.h: 1582: unsigned :2;
[; ;pic16f876a.h: 1583: unsigned I2C_READ :1;
[; ;pic16f876a.h: 1584: unsigned I2C_START :1;
[; ;pic16f876a.h: 1585: unsigned I2C_STOP :1;
[; ;pic16f876a.h: 1586: unsigned I2C_DATA :1;
[; ;pic16f876a.h: 1587: };
[; ;pic16f876a.h: 1588: struct {
[; ;pic16f876a.h: 1589: unsigned :2;
[; ;pic16f876a.h: 1590: unsigned nW :1;
[; ;pic16f876a.h: 1591: unsigned :2;
[; ;pic16f876a.h: 1592: unsigned nA :1;
[; ;pic16f876a.h: 1593: };
[; ;pic16f876a.h: 1594: struct {
[; ;pic16f876a.h: 1595: unsigned :2;
[; ;pic16f876a.h: 1596: unsigned nWRITE :1;
[; ;pic16f876a.h: 1597: unsigned :2;
[; ;pic16f876a.h: 1598: unsigned nADDRESS :1;
[; ;pic16f876a.h: 1599: };
[; ;pic16f876a.h: 1600: struct {
[; ;pic16f876a.h: 1601: unsigned :2;
[; ;pic16f876a.h: 1602: unsigned R_W :1;
[; ;pic16f876a.h: 1603: unsigned :2;
[; ;pic16f876a.h: 1604: unsigned D_A :1;
[; ;pic16f876a.h: 1605: };
[; ;pic16f876a.h: 1606: struct {
[; ;pic16f876a.h: 1607: unsigned :2;
[; ;pic16f876a.h: 1608: unsigned READ_WRITE :1;
[; ;pic16f876a.h: 1609: unsigned :2;
[; ;pic16f876a.h: 1610: unsigned DATA_ADDRESS :1;
[; ;pic16f876a.h: 1611: };
[; ;pic16f876a.h: 1612: } SSPSTATbits_t;
[; ;pic16f876a.h: 1613: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f876a.h: 1727: extern volatile unsigned char TXSTA @ 0x098;
"1729
[; ;pic16f876a.h: 1729: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f876a.h: 1732: typedef union {
[; ;pic16f876a.h: 1733: struct {
[; ;pic16f876a.h: 1734: unsigned TX9D :1;
[; ;pic16f876a.h: 1735: unsigned TRMT :1;
[; ;pic16f876a.h: 1736: unsigned BRGH :1;
[; ;pic16f876a.h: 1737: unsigned :1;
[; ;pic16f876a.h: 1738: unsigned SYNC :1;
[; ;pic16f876a.h: 1739: unsigned TXEN :1;
[; ;pic16f876a.h: 1740: unsigned TX9 :1;
[; ;pic16f876a.h: 1741: unsigned CSRC :1;
[; ;pic16f876a.h: 1742: };
[; ;pic16f876a.h: 1743: struct {
[; ;pic16f876a.h: 1744: unsigned TXD8 :1;
[; ;pic16f876a.h: 1745: unsigned :5;
[; ;pic16f876a.h: 1746: unsigned nTX8 :1;
[; ;pic16f876a.h: 1747: };
[; ;pic16f876a.h: 1748: struct {
[; ;pic16f876a.h: 1749: unsigned :6;
[; ;pic16f876a.h: 1750: unsigned TX8_9 :1;
[; ;pic16f876a.h: 1751: };
[; ;pic16f876a.h: 1752: } TXSTAbits_t;
[; ;pic16f876a.h: 1753: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f876a.h: 1807: extern volatile unsigned char SPBRG @ 0x099;
"1809
[; ;pic16f876a.h: 1809: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f876a.h: 1813: extern volatile unsigned char CMCON @ 0x09C;
"1815
[; ;pic16f876a.h: 1815: asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
[; ;pic16f876a.h: 1818: typedef union {
[; ;pic16f876a.h: 1819: struct {
[; ;pic16f876a.h: 1820: unsigned CM :3;
[; ;pic16f876a.h: 1821: unsigned CIS :1;
[; ;pic16f876a.h: 1822: unsigned C1INV :1;
[; ;pic16f876a.h: 1823: unsigned C2INV :1;
[; ;pic16f876a.h: 1824: unsigned C1OUT :1;
[; ;pic16f876a.h: 1825: unsigned C2OUT :1;
[; ;pic16f876a.h: 1826: };
[; ;pic16f876a.h: 1827: struct {
[; ;pic16f876a.h: 1828: unsigned CM0 :1;
[; ;pic16f876a.h: 1829: unsigned CM1 :1;
[; ;pic16f876a.h: 1830: unsigned CM2 :1;
[; ;pic16f876a.h: 1831: };
[; ;pic16f876a.h: 1832: } CMCONbits_t;
[; ;pic16f876a.h: 1833: extern volatile CMCONbits_t CMCONbits @ 0x09C;
[; ;pic16f876a.h: 1882: extern volatile unsigned char CVRCON @ 0x09D;
"1884
[; ;pic16f876a.h: 1884: asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
[; ;pic16f876a.h: 1887: typedef union {
[; ;pic16f876a.h: 1888: struct {
[; ;pic16f876a.h: 1889: unsigned CVR :4;
[; ;pic16f876a.h: 1890: unsigned :1;
[; ;pic16f876a.h: 1891: unsigned CVRR :1;
[; ;pic16f876a.h: 1892: unsigned CVROE :1;
[; ;pic16f876a.h: 1893: unsigned CVREN :1;
[; ;pic16f876a.h: 1894: };
[; ;pic16f876a.h: 1895: struct {
[; ;pic16f876a.h: 1896: unsigned CVR0 :1;
[; ;pic16f876a.h: 1897: unsigned CVR1 :1;
[; ;pic16f876a.h: 1898: unsigned CVR2 :1;
[; ;pic16f876a.h: 1899: unsigned CVR3 :1;
[; ;pic16f876a.h: 1900: };
[; ;pic16f876a.h: 1901: } CVRCONbits_t;
[; ;pic16f876a.h: 1902: extern volatile CVRCONbits_t CVRCONbits @ 0x09D;
[; ;pic16f876a.h: 1946: extern volatile unsigned char ADRESL @ 0x09E;
"1948
[; ;pic16f876a.h: 1948: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f876a.h: 1952: extern volatile unsigned char ADCON1 @ 0x09F;
"1954
[; ;pic16f876a.h: 1954: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f876a.h: 1957: typedef union {
[; ;pic16f876a.h: 1958: struct {
[; ;pic16f876a.h: 1959: unsigned PCFG :4;
[; ;pic16f876a.h: 1960: unsigned :2;
[; ;pic16f876a.h: 1961: unsigned ADCS2 :1;
[; ;pic16f876a.h: 1962: unsigned ADFM :1;
[; ;pic16f876a.h: 1963: };
[; ;pic16f876a.h: 1964: struct {
[; ;pic16f876a.h: 1965: unsigned PCFG0 :1;
[; ;pic16f876a.h: 1966: unsigned PCFG1 :1;
[; ;pic16f876a.h: 1967: unsigned PCFG2 :1;
[; ;pic16f876a.h: 1968: unsigned PCFG3 :1;
[; ;pic16f876a.h: 1969: };
[; ;pic16f876a.h: 1970: } ADCON1bits_t;
[; ;pic16f876a.h: 1971: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f876a.h: 2010: extern volatile unsigned char EEDATA @ 0x10C;
"2012
[; ;pic16f876a.h: 2012: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f876a.h: 2016: extern volatile unsigned char EEADR @ 0x10D;
"2018
[; ;pic16f876a.h: 2018: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f876a.h: 2022: extern volatile unsigned char EEDATH @ 0x10E;
"2024
[; ;pic16f876a.h: 2024: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f876a.h: 2028: extern volatile unsigned char EEADRH @ 0x10F;
"2030
[; ;pic16f876a.h: 2030: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f876a.h: 2034: extern volatile unsigned char EECON1 @ 0x18C;
"2036
[; ;pic16f876a.h: 2036: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f876a.h: 2039: typedef union {
[; ;pic16f876a.h: 2040: struct {
[; ;pic16f876a.h: 2041: unsigned RD :1;
[; ;pic16f876a.h: 2042: unsigned WR :1;
[; ;pic16f876a.h: 2043: unsigned WREN :1;
[; ;pic16f876a.h: 2044: unsigned WRERR :1;
[; ;pic16f876a.h: 2045: unsigned :3;
[; ;pic16f876a.h: 2046: unsigned EEPGD :1;
[; ;pic16f876a.h: 2047: };
[; ;pic16f876a.h: 2048: } EECON1bits_t;
[; ;pic16f876a.h: 2049: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f876a.h: 2078: extern volatile unsigned char EECON2 @ 0x18D;
"2080
[; ;pic16f876a.h: 2080: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f876a.h: 2090: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f876a.h: 2092: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f876a.h: 2094: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f876a.h: 2096: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f876a.h: 2098: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f876a.h: 2100: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f876a.h: 2102: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f876a.h: 2104: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f876a.h: 2106: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f876a.h: 2108: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f876a.h: 2110: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f876a.h: 2112: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f876a.h: 2114: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f876a.h: 2116: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f876a.h: 2118: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f876a.h: 2120: extern volatile __bit C1INV @ (((unsigned) &CMCON)*8) + 4;
[; ;pic16f876a.h: 2122: extern volatile __bit C1OUT @ (((unsigned) &CMCON)*8) + 6;
[; ;pic16f876a.h: 2124: extern volatile __bit C2INV @ (((unsigned) &CMCON)*8) + 5;
[; ;pic16f876a.h: 2126: extern volatile __bit C2OUT @ (((unsigned) &CMCON)*8) + 7;
[; ;pic16f876a.h: 2128: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f876a.h: 2130: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f876a.h: 2132: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f876a.h: 2134: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f876a.h: 2136: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f876a.h: 2138: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f876a.h: 2140: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f876a.h: 2142: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f876a.h: 2144: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f876a.h: 2146: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f876a.h: 2148: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f876a.h: 2150: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f876a.h: 2152: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f876a.h: 2154: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f876a.h: 2156: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f876a.h: 2158: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f876a.h: 2160: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f876a.h: 2162: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f876a.h: 2164: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f876a.h: 2166: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f876a.h: 2168: extern volatile __bit CIS @ (((unsigned) &CMCON)*8) + 3;
[; ;pic16f876a.h: 2170: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f876a.h: 2172: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f876a.h: 2174: extern volatile __bit CM0 @ (((unsigned) &CMCON)*8) + 0;
[; ;pic16f876a.h: 2176: extern volatile __bit CM1 @ (((unsigned) &CMCON)*8) + 1;
[; ;pic16f876a.h: 2178: extern volatile __bit CM2 @ (((unsigned) &CMCON)*8) + 2;
[; ;pic16f876a.h: 2180: extern volatile __bit CMIE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f876a.h: 2182: extern volatile __bit CMIF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f876a.h: 2184: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f876a.h: 2186: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f876a.h: 2188: extern volatile __bit CVR0 @ (((unsigned) &CVRCON)*8) + 0;
[; ;pic16f876a.h: 2190: extern volatile __bit CVR1 @ (((unsigned) &CVRCON)*8) + 1;
[; ;pic16f876a.h: 2192: extern volatile __bit CVR2 @ (((unsigned) &CVRCON)*8) + 2;
[; ;pic16f876a.h: 2194: extern volatile __bit CVR3 @ (((unsigned) &CVRCON)*8) + 3;
[; ;pic16f876a.h: 2196: extern volatile __bit CVREN @ (((unsigned) &CVRCON)*8) + 7;
[; ;pic16f876a.h: 2198: extern volatile __bit CVROE @ (((unsigned) &CVRCON)*8) + 6;
[; ;pic16f876a.h: 2200: extern volatile __bit CVRR @ (((unsigned) &CVRCON)*8) + 5;
[; ;pic16f876a.h: 2202: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 2204: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f876a.h: 2206: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 2208: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 2210: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f876a.h: 2212: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f876a.h: 2214: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f876a.h: 2216: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f876a.h: 2218: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f876a.h: 2220: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f876a.h: 2222: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 2224: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 2226: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 2228: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 2230: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 2232: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f876a.h: 2234: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f876a.h: 2236: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f876a.h: 2238: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f876a.h: 2240: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f876a.h: 2242: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f876a.h: 2244: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f876a.h: 2246: extern volatile __bit PCFG0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f876a.h: 2248: extern volatile __bit PCFG1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f876a.h: 2250: extern volatile __bit PCFG2 @ (((unsigned) &ADCON1)*8) + 2;
[; ;pic16f876a.h: 2252: extern volatile __bit PCFG3 @ (((unsigned) &ADCON1)*8) + 3;
[; ;pic16f876a.h: 2254: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f876a.h: 2256: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f876a.h: 2258: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f876a.h: 2260: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f876a.h: 2262: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f876a.h: 2264: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f876a.h: 2266: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f876a.h: 2268: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f876a.h: 2270: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f876a.h: 2272: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f876a.h: 2274: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f876a.h: 2276: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f876a.h: 2278: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f876a.h: 2280: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f876a.h: 2282: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f876a.h: 2284: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f876a.h: 2286: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f876a.h: 2288: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f876a.h: 2290: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f876a.h: 2292: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f876a.h: 2294: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f876a.h: 2296: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f876a.h: 2298: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f876a.h: 2300: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f876a.h: 2302: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f876a.h: 2304: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f876a.h: 2306: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f876a.h: 2308: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f876a.h: 2310: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f876a.h: 2312: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f876a.h: 2314: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 2316: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 2318: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f876a.h: 2320: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f876a.h: 2322: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f876a.h: 2324: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f876a.h: 2326: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f876a.h: 2328: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 2330: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f876a.h: 2332: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f876a.h: 2334: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f876a.h: 2336: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 2338: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f876a.h: 2340: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 2342: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 2344: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f876a.h: 2346: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f876a.h: 2348: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f876a.h: 2350: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f876a.h: 2352: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f876a.h: 2354: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f876a.h: 2356: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f876a.h: 2358: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f876a.h: 2360: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f876a.h: 2362: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f876a.h: 2364: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f876a.h: 2366: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f876a.h: 2368: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f876a.h: 2370: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f876a.h: 2372: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f876a.h: 2374: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f876a.h: 2376: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f876a.h: 2378: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f876a.h: 2380: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f876a.h: 2382: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 2384: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f876a.h: 2386: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 2388: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f876a.h: 2390: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f876a.h: 2392: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f876a.h: 2394: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f876a.h: 2396: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f876a.h: 2398: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f876a.h: 2400: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f876a.h: 2402: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f876a.h: 2404: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f876a.h: 2406: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f876a.h: 2408: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f876a.h: 2410: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f876a.h: 2412: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f876a.h: 2414: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f876a.h: 2416: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f876a.h: 2418: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f876a.h: 2420: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f876a.h: 2422: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f876a.h: 2424: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f876a.h: 2426: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f876a.h: 2428: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f876a.h: 2430: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f876a.h: 2432: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f876a.h: 2434: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f876a.h: 2436: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f876a.h: 2438: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f876a.h: 2440: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f876a.h: 2442: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f876a.h: 2444: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f876a.h: 2446: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f876a.h: 2448: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f876a.h: 2450: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f876a.h: 2452: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f876a.h: 2454: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f876a.h: 2456: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f876a.h: 2458: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f876a.h: 2460: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f876a.h: 2462: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f876a.h: 2464: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 2466: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 2468: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f876a.h: 2470: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f876a.h: 2472: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f876a.h: 2474: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f876a.h: 2476: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f876a.h: 2478: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f876a.h: 2480: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f876a.h: 2482: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f876a.h: 2484: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f876a.h: 2486: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f876a.h: 2488: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f876a.h: 2490: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 2492: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f876a.h: 2494: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f876a.h: 2496: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f876a.h: 2498: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f876a.h: 2500: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f876a.h: 2502: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f876a.h: 2504: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f876a.h: 2506: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f876a.h: 2508: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f876a.h: 2510: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f876a.h: 2512: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f876a.h: 2514: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f876a.h: 2516: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 77: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 152: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 154: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 192: extern unsigned char __resetbits;
[; ;pic.h: 193: extern __bit __powerdown;
[; ;pic.h: 194: extern __bit __timeout;
"10 config.h
[p x FOSC=HS ]
"11
[p x WDTE=OFF ]
"12
[p x PWRTE=OFF ]
"13
[p x BOREN=ON ]
"14
[p x LVP=OFF ]
"15
[p x CPD=OFF ]
"16
[p x WRT=OFF ]
"17
[p x CP=OFF ]
[; ;stdint.h: 4: typedef char int8_t;
[; ;stdint.h: 5: typedef int int16_t;
[; ;stdint.h: 6: typedef long int32_t;
[; ;stdint.h: 8: typedef unsigned char uint8_t;
[; ;stdint.h: 9: typedef unsigned int uint16_t;
[; ;stdint.h: 10: typedef unsigned long uint32_t;
[; ;stdint.h: 13: typedef unsigned char boolean;
[; ;virtualwire.h: 41: void vw_setup(uint16_t brate);
[; ;virtualwire.h: 42: boolean vw_send(const char *buf, uint8_t len);
[; ;virtualwire.h: 43: void vw_wait_tx(void);
[; ;virtualwire.h: 45: boolean vw_have_message(void);
[; ;virtualwire.h: 46: boolean vw_recv(uint8_t *buf, uint8_t *len);
[; ;virtualwire.h: 48: void vw_rx_stop(void);
[; ;virtualwire.h: 49: void vw_rx_start(void);
[; ;virtualwire.h: 51: void vw_isr_tmr0(void);
"11 ../_libs/crc16.h
[v _crc16_update `(ui ~T0 @X0 1 ef2`ui`uc ]
{
[; ;crc16.h: 11: uint16_t crc16_update(uint16_t crc, uint8_t a){
[e :U _crc16_update ]
[v _crc `ui ~T0 @X0 1 r1 ]
[v _a `uc ~T0 @X0 1 r2 ]
[f ]
"13
[v _i `i ~T0 @X0 1 a ]
[; ;crc16.h: 13: int i;
[; ;crc16.h: 15: crc ^= a;
"15
[e =^ _crc -> _a `ui ]
[; ;crc16.h: 17: for (i = 0; i < 8; ++i){
"17
{
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 88  ]
[e $U 89  ]
[e :U 88 ]
{
[; ;crc16.h: 19: if (crc & 1){
"19
[e $ ! != & _crc -> -> 1 `i `ui -> -> 0 `i `ui 91  ]
{
[; ;crc16.h: 20: crc = (crc >> 1) ^ 0xA001;
"20
[e = _crc ^ >> _crc -> 1 `i -> 40961 `ui ]
"21
}
[; ;crc16.h: 21: }
[e $U 92  ]
"23
[e :U 91 ]
[; ;crc16.h: 23: else{
{
[; ;crc16.h: 24: crc = (crc >> 1);
"24
[e = _crc >> _crc -> 1 `i ]
"25
}
[e :U 92 ]
"27
}
"17
[e =+ _i -> 1 `i ]
[e $ < _i -> 8 `i 88  ]
[e :U 89 ]
"27
}
[; ;crc16.h: 25: }
[; ;crc16.h: 27: }
[; ;crc16.h: 29: return crc;
"29
[e ) _crc ]
[e $UE 87  ]
[; ;crc16.h: 30: }
"30
[e :UE 87 ]
}
"32
[v _crc_xmodem_update `(ui ~T0 @X0 1 ef2`ui`uc ]
{
[; ;crc16.h: 32: uint16_t crc_xmodem_update (uint16_t crc, uint8_t data){
[e :U _crc_xmodem_update ]
[v _crc `ui ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[f ]
"34
[v _i `i ~T0 @X0 1 a ]
[; ;crc16.h: 34: int i;
[; ;crc16.h: 36: crc = crc ^ ((uint16_t)data << 8);
"36
[e = _crc ^ _crc << -> _data `ui -> 8 `i ]
[; ;crc16.h: 38: for (i=0; i<8; i++){
"38
{
[e = _i -> 0 `i ]
[e $ < _i -> 8 `i 94  ]
[e $U 95  ]
[e :U 94 ]
{
[; ;crc16.h: 40: if (crc & 0x8000)
"40
[e $ ! != & _crc -> 32768 `ui -> -> 0 `i `ui 97  ]
[; ;crc16.h: 41: crc = (crc << 1) ^ 0x1021;
"41
[e = _crc ^ << _crc -> 1 `i -> -> 4129 `i `ui ]
[e $U 98  ]
"43
[e :U 97 ]
[; ;crc16.h: 43: else
[; ;crc16.h: 44: crc <<= 1;
"44
[e =<< _crc -> 1 `i ]
[e :U 98 ]
"45
}
"38
[e ++ _i -> 1 `i ]
[e $ < _i -> 8 `i 94  ]
[e :U 95 ]
"45
}
[; ;crc16.h: 45: }
[; ;crc16.h: 47: return crc;
"47
[e ) _crc ]
[e $UE 93  ]
[; ;crc16.h: 48: }
"48
[e :UE 93 ]
}
"51
[v __crc_ccitt_update `(ui ~T0 @X0 1 ef2`ui`uc ]
{
[; ;crc16.h: 51: uint16_t _crc_ccitt_update (uint16_t crc, uint8_t data){
[e :U __crc_ccitt_update ]
[v _crc `ui ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[f ]
[; ;crc16.h: 53: data ^= ((crc)&0xff);
"53
[e =^ _data -> & _crc -> -> 255 `i `ui `uc ]
[; ;crc16.h: 54: data ^= data << 4;
"54
[e =^ _data -> << -> _data `i -> 4 `i `uc ]
[; ;crc16.h: 56: return ((((uint16_t) data << 8) | ((crc)>>8)) ^ (uint8_t) (data >> 4)
[; ;crc16.h: 57: ^ ((uint16_t) data << 3));
"57
[e ) ^ ^ | << -> _data `ui -> 8 `i >> _crc -> 8 `i -> -> >> -> _data `i -> 4 `i `uc `ui << -> _data `ui -> 3 `i ]
[e $UE 99  ]
[; ;crc16.h: 59: }
"59
[e :UE 99 ]
}
"62
[v __crc_ibutton_update `(uc ~T0 @X0 1 ef2`uc`uc ]
{
[; ;crc16.h: 62: uint8_t _crc_ibutton_update(uint8_t crc, uint8_t data){
[e :U __crc_ibutton_update ]
[v _crc `uc ~T0 @X0 1 r1 ]
[v _data `uc ~T0 @X0 1 r2 ]
[f ]
"64
[v _i `uc ~T0 @X0 1 a ]
[; ;crc16.h: 64: uint8_t i;
[; ;crc16.h: 66: crc = crc ^ data;
"66
[e = _crc -> ^ -> _crc `i -> _data `i `uc ]
[; ;crc16.h: 68: for (i = 0; i < 8; i++){
"68
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 101  ]
[e $U 102  ]
[e :U 101 ]
{
[; ;crc16.h: 70: if (crc & 0x01)
"70
[e $ ! != & -> _crc `i -> 1 `i -> 0 `i 104  ]
[; ;crc16.h: 71: crc = (crc >> 1) ^ 0x8C;
"71
[e = _crc -> ^ >> -> _crc `i -> 1 `i -> 140 `i `uc ]
[e $U 105  ]
"73
[e :U 104 ]
[; ;crc16.h: 73: else
[; ;crc16.h: 74: crc >>= 1;
"74
[e =>> _crc -> 1 `i ]
[e :U 105 ]
"75
}
"68
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 101  ]
[e :U 102 ]
"75
}
[; ;crc16.h: 75: }
[; ;crc16.h: 77: return crc;
"77
[e ) _crc ]
[e $UE 100  ]
[; ;crc16.h: 78: }
"78
[e :UE 100 ]
}
"6 ../_libs/string.h
[v _memcpy `(*uc ~T0 @X0 1 ef3`*uc`*uc`ui ]
{
[; ;string.h: 6: unsigned char *memcpy(unsigned char *dest, unsigned char *src, unsigned int n){
[e :U _memcpy ]
[v _dest `*uc ~T0 @X0 1 r1 ]
[v _src `*uc ~T0 @X0 1 r2 ]
[v _n `ui ~T0 @X0 1 r3 ]
[f ]
[; ;string.h: 16: while (n--)
"16
[e $U 107  ]
[e :U 108 ]
[; ;string.h: 17: dest[n] = src[n];
"17
[e = *U + _dest * -> _n `ux -> -> # *U _dest `ui `ux *U + _src * -> _n `ux -> -> # *U _src `ui `ux ]
[e :U 107 ]
"16
[e $ != -- _n -> -> 1 `i `ui -> -> 0 `i `ui 108  ]
[e :U 109 ]
[; ;string.h: 20: return dest;
"20
[e ) _dest ]
[e $UE 106  ]
[; ;string.h: 22: }
"22
[e :UE 106 ]
}
"29 virtualwire.c
[v _vw_tx_len `uc ~T0 @X0 1 s ]
[i _vw_tx_len
-> -> 0 `i `uc
]
[; ;virtualwire.c: 29: static uint8_t vw_tx_len = 0;
"30
[v _vw_tx_index `uc ~T0 @X0 1 s ]
[i _vw_tx_index
-> -> 0 `i `uc
]
[; ;virtualwire.c: 30: static uint8_t vw_tx_index = 0;
"31
[v _vw_tx_header `uc ~T0 @X0 1 s ]
[; ;virtualwire.c: 31: static boolean vw_tx_header;
"33
[v _vw_tx_sample `uc ~T0 @X0 1 s ]
[i _vw_tx_sample
-> -> 0 `i `uc
]
[; ;virtualwire.c: 33: static uint8_t vw_tx_sample = 0;
"34
[v _vw_tx_bit `uc ~T0 @X0 1 s ]
[i _vw_tx_bit
-> -> 0 `i `uc
]
[; ;virtualwire.c: 34: static uint8_t vw_tx_bit = 0;
"35
[v _vw_tx_enabled `uc ~T0 @X0 1 s ]
[i _vw_tx_enabled
-> -> 0 `i `uc
]
[; ;virtualwire.c: 35: static boolean vw_tx_enabled = 0;
"37
[v _vw_tmr0_value `uc ~T0 @X0 1 s ]
[; ;virtualwire.c: 37: static uint8_t vw_tmr0_value;
"42
[v _vw_rx_done `Vuc ~T0 @X0 1 s ]
[i _vw_rx_done
-> -> 0 `i `uc
]
[; ;virtualwire.c: 42: static volatile boolean vw_rx_done = 0;
"43
[v _vw_rx_bits `ui ~T0 @X0 1 s ]
[i _vw_rx_bits
-> -> 0 `i `ui
]
[; ;virtualwire.c: 43: static uint16_t vw_rx_bits = 0;
"44
[v _vw_rx_enabled `uc ~T0 @X0 1 s ]
[i _vw_rx_enabled
-> -> 0 `i `uc
]
[; ;virtualwire.c: 44: static boolean vw_rx_enabled = 0;
"45
[v _vw_rx_enabled_last `uc ~T0 @X0 1 s ]
[i _vw_rx_enabled_last
-> -> 0 `i `uc
]
[; ;virtualwire.c: 45: static boolean vw_rx_enabled_last = 0;
"46
[v _vw_rx_bit_count `uc ~T0 @X0 1 s ]
[i _vw_rx_bit_count
-> -> 0 `i `uc
]
[; ;virtualwire.c: 46: static uint8_t vw_rx_bit_count = 0;
"47
[v _vw_rx_count `uc ~T0 @X0 1 s ]
[i _vw_rx_count
-> -> 0 `i `uc
]
[; ;virtualwire.c: 47: static uint8_t vw_rx_count = 0;
"48
[v _vw_rx_len `uc ~T0 @X0 1 s ]
[i _vw_rx_len
-> -> 0 `i `uc
]
[; ;virtualwire.c: 48: static uint8_t vw_rx_len = 0;
"50
[v _vw_rx_sample `uc ~T0 @X0 1 s ]
[i _vw_rx_sample
-> -> 0 `i `uc
]
[; ;virtualwire.c: 50: static uint8_t vw_rx_sample = 0;
"51
[v _vw_rx_last_sample `uc ~T0 @X0 1 s ]
[i _vw_rx_last_sample
-> -> 0 `i `uc
]
[; ;virtualwire.c: 51: static uint8_t vw_rx_last_sample = 0;
"52
[v _vw_rx_active `uc ~T0 @X0 1 s ]
[i _vw_rx_active
-> -> 0 `i `uc
]
[; ;virtualwire.c: 52: static boolean vw_rx_active = 0;
"77
[v _vw_rx_pll_ramp `uc ~T0 @X0 1 s ]
[i _vw_rx_pll_ramp
-> -> 0 `i `uc
]
[; ;virtualwire.c: 77: static uint8_t vw_rx_pll_ramp = 0;
"78
[v _vw_rx_integrator `uc ~T0 @X0 1 s ]
[i _vw_rx_integrator
-> -> 0 `i `uc
]
[; ;virtualwire.c: 78: static uint8_t vw_rx_integrator = 0;
"84
[v _symbols `Cuc ~T0 @X0 -> 0 `x e ]
[i _symbols
:U ..
"85
-> -> 13 `i `uc
-> -> 14 `i `uc
-> -> 19 `i `uc
-> -> 21 `i `uc
-> -> 22 `i `uc
-> -> 25 `i `uc
-> -> 26 `i `uc
-> -> 28 `i `uc
"86
-> -> 35 `i `uc
-> -> 37 `i `uc
-> -> 38 `i `uc
-> -> 41 `i `uc
-> -> 42 `i `uc
-> -> 44 `i `uc
-> -> 50 `i `uc
"87
-> -> 52 `i `uc
..
]
[; ;virtualwire.c: 84: const uint8_t symbols[] = {
[; ;virtualwire.c: 85: 0xd, 0xe, 0x13, 0x15, 0x16, 0x19, 0x1a, 0x1c,
[; ;virtualwire.c: 86: 0x23, 0x25, 0x26, 0x29, 0x2a, 0x2c, 0x32, 0x34
[; ;virtualwire.c: 87: };
"92
[v _vw_tx_buf_header `Cuc ~T0 @X0 -> 8 `i e ]
[i _vw_tx_buf_header
:U ..
"93
-> -> 42 `i `uc
-> -> 42 `i `uc
-> -> 42 `i `uc
-> -> 42 `i `uc
-> -> 42 `i `uc
-> -> 42 `i `uc
-> -> 56 `i `uc
-> -> 44 `i `uc
..
]
[; ;virtualwire.c: 92: const uint8_t vw_tx_buf_header[8]
[; ;virtualwire.c: 93: = {0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x2a, 0x38, 0x2c};
"95
[v _vw_tx_buf `Xuc ~T0 @X0 * -> 24 `i -> 2 `i s ]
[; ;virtualwire.c: 95: static bank1 uint8_t vw_tx_buf[24 * 2];
"97
[v __calc_timer0_prescaler `(uc ~T0 @X0 1 sf4`ui`*ui`*uc`*uc ]
"98
{
[; ;virtualwire.c: 97: static boolean _calc_timer0_prescaler(uint16_t brate, uint16_t *prescaler_value, uint8_t *prescaler_bits, uint8_t *k_tmr0)
[; ;virtualwire.c: 98: {
[e :U __calc_timer0_prescaler ]
"97
[v _brate `ui ~T0 @X0 1 r1 ]
[v _prescaler_value `*ui ~T0 @X0 1 r2 ]
[v _prescaler_bits `*uc ~T0 @X0 1 r3 ]
[v _k_tmr0 `*uc ~T0 @X0 1 r4 ]
"98
[f ]
"99
[v F1062 `Cui ~T0 @X0 -> 0 `x s prescaler_factor ]
[i F1062
:U ..
-> -> 1 `i `ui
-> -> 2 `i `ui
-> -> 4 `i `ui
-> -> 8 `i `ui
-> -> 16 `i `ui
-> -> 32 `i `ui
-> -> 64 `i `ui
-> -> 128 `i `ui
-> -> 256 `i `ui
..
]
"100
[v _pindex `uc ~T0 @X0 1 a ]
"101
[v _aux_tmr0 `ui ~T0 @X0 1 a ]
[; ;virtualwire.c: 99: const uint16_t prescaler_factor[] = {1, 2, 4, 8, 16, 32, 64, 128, 256};
[; ;virtualwire.c: 100: uint8_t pindex;
[; ;virtualwire.c: 101: uint16_t aux_tmr0;
[; ;virtualwire.c: 103: for (pindex = 0; pindex < 8; pindex++)
"103
{
[e = _pindex -> -> 0 `i `uc ]
[e $ < -> _pindex `i -> 8 `i 111  ]
[e $U 112  ]
"104
[e :U 111 ]
[; ;virtualwire.c: 104: {
{
[; ;virtualwire.c: 105: *prescaler_value = prescaler_factor[pindex];
"105
[e = *U _prescaler_value *U + &U F1062 * -> _pindex `ux -> -> # *U &U F1062 `ui `ux ]
[; ;virtualwire.c: 106: aux_tmr0 = 8000000 / (4 * (*prescaler_value) * brate * 8);
"106
[e = _aux_tmr0 -> / -> 8000000 `l -> * * * -> -> 4 `i `ui *U _prescaler_value _brate -> -> 8 `i `ui `l `ui ]
[; ;virtualwire.c: 108: if (aux_tmr0 < 256)
"108
[e $ ! < _aux_tmr0 -> -> 256 `i `ui 114  ]
[; ;virtualwire.c: 109: {
"109
{
[; ;virtualwire.c: 110: *k_tmr0 = aux_tmr0;
"110
[e = *U _k_tmr0 -> _aux_tmr0 `uc ]
[; ;virtualwire.c: 111: if (pindex > 0)
"111
[e $ ! > -> _pindex `i -> 0 `i 115  ]
[; ;virtualwire.c: 112: {
"112
{
[; ;virtualwire.c: 113: *prescaler_bits = pindex - 1;
"113
[e = *U _prescaler_bits -> - -> _pindex `i -> 1 `i `uc ]
"114
}
[e :U 115 ]
[; ;virtualwire.c: 114: }
[; ;virtualwire.c: 115: return 1;
"115
[e ) -> -> 1 `i `uc ]
[e $UE 110  ]
"116
}
[e :U 114 ]
"117
}
"103
[e ++ _pindex -> -> 1 `i `uc ]
[e $ < -> _pindex `i -> 8 `i 111  ]
[e :U 112 ]
"117
}
[; ;virtualwire.c: 116: }
[; ;virtualwire.c: 117: }
[; ;virtualwire.c: 120: return 0;
"120
[e ) -> -> 0 `i `uc ]
[e $UE 110  ]
[; ;virtualwire.c: 121: }
"121
[e :UE 110 ]
}
"123
[v _vw_setup `(v ~T0 @X0 1 ef1`ui ]
"124
{
[; ;virtualwire.c: 123: void vw_setup(uint16_t brate)
[; ;virtualwire.c: 124: {
[e :U _vw_setup ]
"123
[v _brate `ui ~T0 @X0 1 r1 ]
"124
[f ]
"125
[v _prescaler_value `ui ~T0 @X0 1 a ]
"126
[v _prescaler_bits `uc ~T0 @X0 1 a ]
[; ;virtualwire.c: 125: uint16_t prescaler_value;
[; ;virtualwire.c: 126: uint8_t prescaler_bits;
[; ;virtualwire.c: 129: TRISB3 = 1;
"129
[e = _TRISB3 -> -> 1 `i `b ]
[; ;virtualwire.c: 130: TRISB4 = 0;
"130
[e = _TRISB4 -> -> 0 `i `b ]
[; ;virtualwire.c: 133: RB4 = 0;
"133
[e = _RB4 -> -> 0 `i `b ]
[; ;virtualwire.c: 136: _calc_timer0_prescaler(brate, &prescaler_value, &prescaler_bits, &vw_tmr0_value);
"136
[e ( __calc_timer0_prescaler (4 , , , _brate &U _prescaler_value &U _prescaler_bits &U _vw_tmr0_value ]
[; ;virtualwire.c: 138: if (prescaler_value > 1)
"138
[e $ ! > _prescaler_value -> -> 1 `i `ui 117  ]
[; ;virtualwire.c: 139: {
"139
{
[; ;virtualwire.c: 141: OPTION_REG &= 0xF0;
"141
[e =& _OPTION_REG -> -> 240 `i `uc ]
[; ;virtualwire.c: 142: OPTION_REG |= prescaler_bits;
"142
[e =| _OPTION_REG _prescaler_bits ]
"143
}
[e :U 117 ]
[; ;virtualwire.c: 143: }
[; ;virtualwire.c: 145: T0CS = 0;
"145
[e = _T0CS -> -> 0 `i `b ]
[; ;virtualwire.c: 146: TMR0 = (2 - vw_tmr0_value);
"146
[e = _TMR0 -> - -> 2 `i -> _vw_tmr0_value `i `uc ]
[; ;virtualwire.c: 148: TMR0IF = 0;
"148
[e = _TMR0IF -> -> 0 `i `b ]
[; ;virtualwire.c: 149: TMR0IE = 1;
"149
[e = _TMR0IE -> -> 1 `i `b ]
[; ;virtualwire.c: 150: GIE = PEIE = 1;
"150
[e = _GIE = _PEIE -> -> 1 `i `b ]
[; ;virtualwire.c: 151: }
"151
[e :UE 116 ]
}
"157
[v _vw_wait_tx `(v ~T0 @X0 1 ef ]
"158
{
[; ;virtualwire.c: 157: void vw_wait_tx(void)
[; ;virtualwire.c: 158: {
[e :U _vw_wait_tx ]
[f ]
[; ;virtualwire.c: 159: while (vw_tx_enabled);
"159
[e $U 119  ]
[e :U 120 ]
[e :U 119 ]
[e $ != -> _vw_tx_enabled `i -> -> -> 0 `i `uc `i 120  ]
[e :U 121 ]
[; ;virtualwire.c: 160: }
"160
[e :UE 118 ]
}
"162
[v _vw_tx_stop `(v ~T0 @X0 1 ef ]
"163
{
[; ;virtualwire.c: 162: void vw_tx_stop(void)
[; ;virtualwire.c: 163: {
[e :U _vw_tx_stop ]
[f ]
[; ;virtualwire.c: 164: RB4 = 0;
"164
[e = _RB4 -> -> 0 `i `b ]
[; ;virtualwire.c: 165: vw_tx_enabled = 0;
"165
[e = _vw_tx_enabled -> -> 0 `i `uc ]
[; ;virtualwire.c: 166: }
"166
[e :UE 122 ]
}
"168
[v _vw_tx_start `(v ~T0 @X0 1 ef ]
"169
{
[; ;virtualwire.c: 168: void vw_tx_start(void)
[; ;virtualwire.c: 169: {
[e :U _vw_tx_start ]
[f ]
[; ;virtualwire.c: 170: vw_tx_index = 0;
"170
[e = _vw_tx_index -> -> 0 `i `uc ]
[; ;virtualwire.c: 171: vw_tx_bit = 0;
"171
[e = _vw_tx_bit -> -> 0 `i `uc ]
[; ;virtualwire.c: 172: vw_tx_sample = 0;
"172
[e = _vw_tx_sample -> -> 0 `i `uc ]
[; ;virtualwire.c: 174: vw_tx_header = 1;
"174
[e = _vw_tx_header -> -> 1 `i `uc ]
[; ;virtualwire.c: 177: vw_tx_enabled = 1;
"177
[e = _vw_tx_enabled -> -> 1 `i `uc ]
[; ;virtualwire.c: 178: }
"178
[e :UE 123 ]
}
"180
[v _vw_send `(uc ~T0 @X0 1 ef2`*Cuc`uc ]
"181
{
[; ;virtualwire.c: 180: boolean vw_send(const char *buf, uint8_t len)
[; ;virtualwire.c: 181: {
[e :U _vw_send ]
"180
[v _buf `*Cuc ~T0 @X0 1 r1 ]
[v _len `uc ~T0 @X0 1 r2 ]
"181
[f ]
"182
[v _i `uc ~T0 @X0 1 a ]
"183
[v _index `uc ~T0 @X0 1 a ]
[; ;virtualwire.c: 182: uint8_t i;
[; ;virtualwire.c: 183: uint8_t index = 0;
[e = _index -> -> 0 `i `uc ]
"184
[v _crc `ui ~T0 @X0 1 a ]
[; ;virtualwire.c: 184: uint16_t crc = 0xffff;
[e = _crc -> 65535 `ui ]
"185
[v _p `*uc ~T0 @X0 1 a ]
[; ;virtualwire.c: 185: uint8_t *p = vw_tx_buf;
[e = _p -> &U _vw_tx_buf `*uc ]
"186
[v _count `uc ~T0 @X0 1 a ]
[; ;virtualwire.c: 186: uint8_t count = len + 3;
[e = _count -> + -> _len `i -> 3 `i `uc ]
[; ;virtualwire.c: 188: if (len > 24-3)
"188
[e $ ! > -> _len `i - -> 24 `i -> 3 `i 125  ]
[; ;virtualwire.c: 189: return 0;
"189
[e ) -> -> 0 `i `uc ]
[e $UE 124  ]
[e :U 125 ]
[; ;virtualwire.c: 192: vw_wait_tx();
"192
[e ( _vw_wait_tx ..  ]
[; ;virtualwire.c: 193: vw_rx_enabled = 0;
"193
[e = _vw_rx_enabled -> -> 0 `i `uc ]
[; ;virtualwire.c: 196: crc = _crc_ccitt_update(crc, count);
"196
[e = _crc ( __crc_ccitt_update (2 , _crc _count ]
[; ;virtualwire.c: 197: p[index++] = symbols[count >> 4];
"197
[e = *U + _p * -> ++ _index -> -> 1 `i `uc `ux -> -> # *U _p `ui `ux *U + &U _symbols * -> -> >> -> _count `i -> 4 `i `ui `ux -> -> # *U &U _symbols `ui `ux ]
[; ;virtualwire.c: 198: p[index++] = symbols[count & 0xf];
"198
[e = *U + _p * -> ++ _index -> -> 1 `i `uc `ux -> -> # *U _p `ui `ux *U + &U _symbols * -> -> & -> _count `i -> 15 `i `ui `ux -> -> # *U &U _symbols `ui `ux ]
[; ;virtualwire.c: 202: for (i = 0; i < len; i++)
"202
{
[e = _i -> -> 0 `i `uc ]
[e $U 129  ]
"203
[e :U 126 ]
[; ;virtualwire.c: 203: {
{
[; ;virtualwire.c: 204: crc = _crc_ccitt_update(crc, buf[i]);
"204
[e = _crc ( __crc_ccitt_update (2 , _crc *U + _buf * -> _i `ux -> -> # *U _buf `ui `ux ]
[; ;virtualwire.c: 205: p[index++] = symbols[buf[i] >> 4];
"205
[e = *U + _p * -> ++ _index -> -> 1 `i `uc `ux -> -> # *U _p `ui `ux *U + &U _symbols * -> -> >> -> *U + _buf * -> _i `ux -> -> # *U _buf `ui `ux `i -> 4 `i `ui `ux -> -> # *U &U _symbols `ui `ux ]
[; ;virtualwire.c: 206: p[index++] = symbols[buf[i] & 0xf];
"206
[e = *U + _p * -> ++ _index -> -> 1 `i `uc `ux -> -> # *U _p `ui `ux *U + &U _symbols * -> -> & -> *U + _buf * -> _i `ux -> -> # *U _buf `ui `ux `i -> 15 `i `ui `ux -> -> # *U &U _symbols `ui `ux ]
"207
}
"202
[e ++ _i -> -> 1 `i `uc ]
[e :U 129 ]
[e $ < -> _i `i -> _len `i 126  ]
[e :U 127 ]
"207
}
[; ;virtualwire.c: 207: }
[; ;virtualwire.c: 212: crc = ~crc;
"212
[e = _crc ~ _crc ]
[; ;virtualwire.c: 213: p[index++] = symbols[(crc >> 4) & 0xf];
"213
[e = *U + _p * -> ++ _index -> -> 1 `i `uc `ux -> -> # *U _p `ui `ux *U + &U _symbols * -> & >> _crc -> 4 `i -> -> 15 `i `ui `ux -> -> # *U &U _symbols `ui `ux ]
[; ;virtualwire.c: 214: p[index++] = symbols[crc & 0xf];
"214
[e = *U + _p * -> ++ _index -> -> 1 `i `uc `ux -> -> # *U _p `ui `ux *U + &U _symbols * -> & _crc -> -> 15 `i `ui `ux -> -> # *U &U _symbols `ui `ux ]
[; ;virtualwire.c: 215: p[index++] = symbols[(crc >> 12) & 0xf];
"215
[e = *U + _p * -> ++ _index -> -> 1 `i `uc `ux -> -> # *U _p `ui `ux *U + &U _symbols * -> & >> _crc -> 12 `i -> -> 15 `i `ui `ux -> -> # *U &U _symbols `ui `ux ]
[; ;virtualwire.c: 216: p[index++] = symbols[(crc >> 8) & 0xf];
"216
[e = *U + _p * -> ++ _index -> -> 1 `i `uc `ux -> -> # *U _p `ui `ux *U + &U _symbols * -> & >> _crc -> 8 `i -> -> 15 `i `ui `ux -> -> # *U &U _symbols `ui `ux ]
[; ;virtualwire.c: 219: vw_tx_len = index + 8;
"219
[e = _vw_tx_len -> + -> _index `i -> 8 `i `uc ]
[; ;virtualwire.c: 222: vw_tx_start();
"222
[e ( _vw_tx_start ..  ]
[; ;virtualwire.c: 224: return 1;
"224
[e ) -> -> 1 `i `uc ]
[e $UE 124  ]
[; ;virtualwire.c: 225: }
"225
[e :UE 124 ]
}
"234
[v _vw_crc `(ui ~T0 @X0 1 ef2`*uc`uc ]
"235
{
[; ;virtualwire.c: 234: uint16_t vw_crc(uint8_t *ptr, uint8_t count)
[; ;virtualwire.c: 235: {
[e :U _vw_crc ]
"234
[v _ptr `*uc ~T0 @X0 1 r1 ]
[v _count `uc ~T0 @X0 1 r2 ]
"235
[f ]
"236
[v _crc `ui ~T0 @X0 1 a ]
[; ;virtualwire.c: 236: uint16_t crc = 0xffff;
[e = _crc -> 65535 `ui ]
[; ;virtualwire.c: 238: while (count-- > 0)
"238
[e $U 131  ]
[e :U 132 ]
[; ;virtualwire.c: 239: crc = _crc_ccitt_update(crc, *ptr++);
"239
[e = _crc ( __crc_ccitt_update (2 , _crc *U ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x ]
[e :U 131 ]
"238
[e $ > -> -- _count -> -> 1 `i `uc `i -> 0 `i 132  ]
[e :U 133 ]
[; ;virtualwire.c: 240: return crc;
"240
[e ) _crc ]
[e $UE 130  ]
[; ;virtualwire.c: 241: }
"241
[e :UE 130 ]
}
"245
[v _vw_symbol_6to4 `(uc ~T0 @X0 1 ef1`uc ]
"246
{
[; ;virtualwire.c: 245: uint8_t vw_symbol_6to4(uint8_t symbol)
[; ;virtualwire.c: 246: {
[e :U _vw_symbol_6to4 ]
"245
[v _symbol `uc ~T0 @X0 1 r1 ]
"246
[f ]
"247
[v _i `uc ~T0 @X0 1 a ]
[; ;virtualwire.c: 247: uint8_t i;
[; ;virtualwire.c: 250: for (i = 0; i < 16; i++)
"250
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 16 `i 135  ]
[e $U 136  ]
"251
[e :U 135 ]
[; ;virtualwire.c: 251: if (symbol == symbols[i])
[e $ ! == -> _symbol `i -> *U + &U _symbols * -> _i `ux -> -> # *U &U _symbols `ui `ux `i 138  ]
[; ;virtualwire.c: 252: return i;
"252
[e ) _i ]
[e $UE 134  ]
[e :U 138 ]
"250
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 16 `i 135  ]
[e :U 136 ]
"254
}
[; ;virtualwire.c: 254: return 0;
[e ) -> -> 0 `i `uc ]
[e $UE 134  ]
[; ;virtualwire.c: 255: }
"255
[e :UE 134 ]
}
"262
[v _vw_pll `(v ~T0 @X0 1 ef ]
"263
{
[; ;virtualwire.c: 262: void vw_pll(void)
[; ;virtualwire.c: 263: {
[e :U _vw_pll ]
[f ]
[; ;virtualwire.c: 265: if (vw_rx_sample)
"265
[e $ ! != -> _vw_rx_sample `i -> -> -> 0 `i `uc `i 140  ]
[; ;virtualwire.c: 266: vw_rx_integrator++;
"266
[e ++ _vw_rx_integrator -> -> 1 `i `uc ]
[e :U 140 ]
[; ;virtualwire.c: 268: if (vw_rx_sample != vw_rx_last_sample)
"268
[e $ ! != -> _vw_rx_sample `i -> _vw_rx_last_sample `i 141  ]
[; ;virtualwire.c: 269: {
"269
{
[; ;virtualwire.c: 271: vw_rx_pll_ramp += ((vw_rx_pll_ramp < 160/2)
[; ;virtualwire.c: 272: ? ((160/8)-9)
[; ;virtualwire.c: 273: : ((160/8)+9));
"273
[e =+ _vw_rx_pll_ramp -> ? < -> _vw_rx_pll_ramp `i / -> 160 `i -> 2 `i : - / -> 160 `i -> 8 `i -> 9 `i + / -> 160 `i -> 8 `i -> 9 `i `uc ]
[; ;virtualwire.c: 274: vw_rx_last_sample = vw_rx_sample;
"274
[e = _vw_rx_last_sample _vw_rx_sample ]
"275
}
[; ;virtualwire.c: 275: }
[e $U 142  ]
"276
[e :U 141 ]
[; ;virtualwire.c: 276: else
[; ;virtualwire.c: 277: {
"277
{
[; ;virtualwire.c: 280: vw_rx_pll_ramp += (160/8);
"280
[e =+ _vw_rx_pll_ramp -> / -> 160 `i -> 8 `i `uc ]
"281
}
[e :U 142 ]
[; ;virtualwire.c: 281: }
[; ;virtualwire.c: 282: if (vw_rx_pll_ramp >= 160)
"282
[e $ ! >= -> _vw_rx_pll_ramp `i -> 160 `i 143  ]
[; ;virtualwire.c: 283: {
"283
{
[; ;virtualwire.c: 286: vw_rx_bits >>= 1;
"286
[e =>> _vw_rx_bits -> 1 `i ]
[; ;virtualwire.c: 290: if (vw_rx_integrator >= 5)
"290
[e $ ! >= -> _vw_rx_integrator `i -> 5 `i 144  ]
[; ;virtualwire.c: 291: vw_rx_bits |= 0x800;
"291
[e =| _vw_rx_bits -> -> 2048 `i `ui ]
[e :U 144 ]
[; ;virtualwire.c: 293: vw_rx_pll_ramp -= 160;
"293
[e =- _vw_rx_pll_ramp -> -> 160 `i `uc ]
[; ;virtualwire.c: 294: vw_rx_integrator = 0;
"294
[e = _vw_rx_integrator -> -> 0 `i `uc ]
[; ;virtualwire.c: 296: if (vw_rx_active)
"296
[e $ ! != -> _vw_rx_active `i -> -> -> 0 `i `uc `i 145  ]
[; ;virtualwire.c: 297: {
"297
{
[; ;virtualwire.c: 300: if (++vw_rx_bit_count >= 12)
"300
[e $ ! >= -> =+ _vw_rx_bit_count -> -> 1 `i `uc `i -> 12 `i 146  ]
[; ;virtualwire.c: 301: {
"301
{
"305
[v _this_byte `uc ~T0 @X0 1 a ]
[; ;virtualwire.c: 305: uint8_t this_byte =
[; ;virtualwire.c: 306: (vw_symbol_6to4(vw_rx_bits & 0x3f)) << 4
[; ;virtualwire.c: 307: | vw_symbol_6to4(vw_rx_bits >> 6);
"307
[e = _this_byte -> | << -> ( _vw_symbol_6to4 (1 -> & _vw_rx_bits -> -> 63 `i `ui `uc `i -> 4 `i -> ( _vw_symbol_6to4 (1 -> >> _vw_rx_bits -> 6 `i `uc `i `uc ]
[; ;virtualwire.c: 312: if (vw_rx_len == 0)
"312
[e $ ! == -> _vw_rx_len `i -> 0 `i 147  ]
[; ;virtualwire.c: 313: {
"313
{
[; ;virtualwire.c: 317: vw_rx_count = this_byte;
"317
[e = _vw_rx_count _this_byte ]
[; ;virtualwire.c: 318: if (vw_rx_count < 4 || vw_rx_count > 24)
"318
[e $ ! || < -> _vw_rx_count `i -> 4 `i > -> _vw_rx_count `i -> 24 `i 148  ]
[; ;virtualwire.c: 319: {
"319
{
[; ;virtualwire.c: 321: vw_rx_active = 0;
"321
[e = _vw_rx_active -> -> 0 `i `uc ]
[; ;virtualwire.c: 322: return;
"322
[e $UE 139  ]
"323
}
[e :U 148 ]
"324
}
[e :U 147 ]
[; ;virtualwire.c: 323: }
[; ;virtualwire.c: 324: }
[; ;virtualwire.c: 325: vw_tx_buf[vw_rx_len++] = this_byte;
"325
[e = *U + &U _vw_tx_buf * -> ++ _vw_rx_len -> -> 1 `i `uc `ux -> -> # *U &U _vw_tx_buf `ui `ux _this_byte ]
[; ;virtualwire.c: 327: if (vw_rx_len >= vw_rx_count)
"327
[e $ ! >= -> _vw_rx_len `i -> _vw_rx_count `i 149  ]
[; ;virtualwire.c: 328: {
"328
{
[; ;virtualwire.c: 330: vw_rx_active = 0;
"330
[e = _vw_rx_active -> -> 0 `i `uc ]
[; ;virtualwire.c: 331: vw_rx_done = 1;
"331
[e = _vw_rx_done -> -> 1 `i `uc ]
"332
}
[e :U 149 ]
[; ;virtualwire.c: 332: }
[; ;virtualwire.c: 333: vw_rx_bit_count = 0;
"333
[e = _vw_rx_bit_count -> -> 0 `i `uc ]
"334
}
[e :U 146 ]
"335
}
[; ;virtualwire.c: 334: }
[; ;virtualwire.c: 335: }
[e $U 150  ]
"337
[e :U 145 ]
[; ;virtualwire.c: 337: else if (vw_rx_bits == 0xb38)
[e $ ! == _vw_rx_bits -> -> 2872 `i `ui 151  ]
[; ;virtualwire.c: 338: {
"338
{
[; ;virtualwire.c: 340: vw_rx_active = 1;
"340
[e = _vw_rx_active -> -> 1 `i `uc ]
[; ;virtualwire.c: 341: vw_rx_bit_count = 0;
"341
[e = _vw_rx_bit_count -> -> 0 `i `uc ]
[; ;virtualwire.c: 342: vw_rx_len = 0;
"342
[e = _vw_rx_len -> -> 0 `i `uc ]
[; ;virtualwire.c: 343: vw_rx_done = 0;
"343
[e = _vw_rx_done -> -> 0 `i `uc ]
"344
}
[e :U 151 ]
"345
[e :U 150 ]
}
[e :U 143 ]
[; ;virtualwire.c: 344: }
[; ;virtualwire.c: 345: }
[; ;virtualwire.c: 346: }
"346
[e :UE 139 ]
}
"348
[v _vw_have_message `(uc ~T0 @X0 1 ef ]
"349
{
[; ;virtualwire.c: 348: boolean vw_have_message(void)
[; ;virtualwire.c: 349: {
[e :U _vw_have_message ]
[f ]
[; ;virtualwire.c: 350: return (vw_rx_done) ? 1 : 0;
"350
[e ) -> ? != -> _vw_rx_done `i -> -> -> 0 `i `Vuc `i : -> 1 `i -> 0 `i `uc ]
[e $UE 152  ]
[; ;virtualwire.c: 351: }
"351
[e :UE 152 ]
}
"353
[v _vw_recv `(uc ~T0 @X0 1 ef2`*uc`*uc ]
"354
{
[; ;virtualwire.c: 353: boolean vw_recv(uint8_t *buf, uint8_t *len)
[; ;virtualwire.c: 354: {
[e :U _vw_recv ]
"353
[v _buf `*uc ~T0 @X0 1 r1 ]
[v _len `*uc ~T0 @X0 1 r2 ]
"354
[f ]
"355
[v _rxlen `uc ~T0 @X0 1 a ]
[; ;virtualwire.c: 355: uint8_t rxlen;
[; ;virtualwire.c: 358: if (!vw_rx_done)
"358
[e $ ! ! != -> _vw_rx_done `i -> -> -> 0 `i `Vuc `i 154  ]
[; ;virtualwire.c: 359: return 0;
"359
[e ) -> -> 0 `i `uc ]
[e $UE 153  ]
[e :U 154 ]
[; ;virtualwire.c: 363: rxlen = vw_rx_len - 3;
"363
[e = _rxlen -> - -> _vw_rx_len `i -> 3 `i `uc ]
[; ;virtualwire.c: 366: if (*len > rxlen)
"366
[e $ ! > -> *U _len `i -> _rxlen `i 155  ]
[; ;virtualwire.c: 367: *len = rxlen;
"367
[e = *U _len _rxlen ]
[e :U 155 ]
[; ;virtualwire.c: 368: memcpy(buf, vw_tx_buf + 1, *len);
"368
[e ( _memcpy (3 , , _buf -> + &U _vw_tx_buf * -> -> 1 `i `x -> -> # *U &U _vw_tx_buf `i `x `*uc -> *U _len `ui ]
[; ;virtualwire.c: 370: vw_rx_done = 0;
"370
[e = _vw_rx_done -> -> 0 `i `uc ]
[; ;virtualwire.c: 373: return (vw_crc(vw_tx_buf, vw_rx_len) == 0xf0b8);
"373
[e ) -> -> == ( _vw_crc (2 , -> &U _vw_tx_buf `*uc _vw_rx_len -> 61624 `ui `i `uc ]
[e $UE 153  ]
[; ;virtualwire.c: 374: }
"374
[e :UE 153 ]
}
"376
[v _vw_rx_stop `(v ~T0 @X0 1 ef ]
"377
{
[; ;virtualwire.c: 376: void vw_rx_stop(void)
[; ;virtualwire.c: 377: {
[e :U _vw_rx_stop ]
[f ]
[; ;virtualwire.c: 378: vw_rx_enabled = 0;
"378
[e = _vw_rx_enabled -> -> 0 `i `uc ]
[; ;virtualwire.c: 379: vw_rx_enabled_last = 0;
"379
[e = _vw_rx_enabled_last -> -> 0 `i `uc ]
[; ;virtualwire.c: 380: }
"380
[e :UE 156 ]
}
"382
[v _vw_rx_start `(v ~T0 @X0 1 ef ]
"383
{
[; ;virtualwire.c: 382: void vw_rx_start(void)
[; ;virtualwire.c: 383: {
[e :U _vw_rx_start ]
[f ]
[; ;virtualwire.c: 384: vw_rx_enabled = 1;
"384
[e = _vw_rx_enabled -> -> 1 `i `uc ]
[; ;virtualwire.c: 385: vw_rx_enabled_last = 1;
"385
[e = _vw_rx_enabled_last -> -> 1 `i `uc ]
[; ;virtualwire.c: 386: }
"386
[e :UE 157 ]
}
"388
[v _vw_isr_tmr0 `(v ~T0 @X0 1 ef ]
"389
{
[; ;virtualwire.c: 388: void vw_isr_tmr0(void)
[; ;virtualwire.c: 389: {
[e :U _vw_isr_tmr0 ]
[f ]
[; ;virtualwire.c: 390: TMR0 += -vw_tmr0_value + 4;
"390
[e =+ _TMR0 -> + -U -> _vw_tmr0_value `i -> 4 `i `uc ]
[; ;virtualwire.c: 391: TMR0IF = 0;
"391
[e = _TMR0IF -> -> 0 `i `b ]
[; ;virtualwire.c: 393: if (vw_rx_enabled && !vw_tx_enabled)
"393
[e $ ! && != -> _vw_rx_enabled `i -> -> -> 0 `i `uc `i ! != -> _vw_tx_enabled `i -> -> -> 0 `i `uc `i 159  ]
[; ;virtualwire.c: 394: vw_rx_sample = RB3;
"394
[e = _vw_rx_sample -> -> _RB3 `i `uc ]
[e :U 159 ]
[; ;virtualwire.c: 398: if (vw_tx_enabled && vw_tx_sample++ == 0)
"398
[e $ ! && != -> _vw_tx_enabled `i -> -> -> 0 `i `uc `i == -> ++ _vw_tx_sample -> -> 1 `i `uc `i -> 0 `i 160  ]
[; ;virtualwire.c: 399: {
"399
{
[; ;virtualwire.c: 400: if (vw_tx_header)
"400
[e $ ! != -> _vw_tx_header `i -> -> -> 0 `i `uc `i 161  ]
[; ;virtualwire.c: 401: {
"401
{
[; ;virtualwire.c: 402: RB4 = (vw_tx_buf_header[vw_tx_index] & (1 << vw_tx_bit++)) ? 1 : 0;
"402
[e = _RB4 -> ? != & -> *U + &U _vw_tx_buf_header * -> _vw_tx_index `ux -> -> # *U &U _vw_tx_buf_header `ui `ux `i << -> 1 `i ++ _vw_tx_bit -> -> 1 `i `uc -> 0 `i : -> 1 `i -> 0 `i `b ]
[; ;virtualwire.c: 403: if (vw_tx_bit >= 6)
"403
[e $ ! >= -> _vw_tx_bit `i -> 6 `i 162  ]
[; ;virtualwire.c: 404: {
"404
{
[; ;virtualwire.c: 405: vw_tx_bit = 0;
"405
[e = _vw_tx_bit -> -> 0 `i `uc ]
[; ;virtualwire.c: 406: vw_tx_index++;
"406
[e ++ _vw_tx_index -> -> 1 `i `uc ]
"407
}
[e :U 162 ]
[; ;virtualwire.c: 407: }
[; ;virtualwire.c: 409: if (vw_tx_index >= 8)
"409
[e $ ! >= -> _vw_tx_index `i -> 8 `i 163  ]
[; ;virtualwire.c: 410: {
"410
{
[; ;virtualwire.c: 412: vw_tx_header = 0;
"412
[e = _vw_tx_header -> -> 0 `i `uc ]
[; ;virtualwire.c: 413: vw_tx_index = 0;
"413
[e = _vw_tx_index -> -> 0 `i `uc ]
"414
}
[e :U 163 ]
"415
}
[; ;virtualwire.c: 414: }
[; ;virtualwire.c: 415: }
[e $U 164  ]
"416
[e :U 161 ]
[; ;virtualwire.c: 416: else
[; ;virtualwire.c: 417: {
"417
{
[; ;virtualwire.c: 422: if (vw_tx_index >= vw_tx_len)
"422
[e $ ! >= -> _vw_tx_index `i -> _vw_tx_len `i 165  ]
[; ;virtualwire.c: 423: {
"423
{
[; ;virtualwire.c: 424: vw_tx_stop();
"424
[e ( _vw_tx_stop ..  ]
[; ;virtualwire.c: 425: vw_rx_enabled = vw_rx_enabled_last;
"425
[e = _vw_rx_enabled _vw_rx_enabled_last ]
"426
}
[; ;virtualwire.c: 426: }
[e $U 166  ]
"427
[e :U 165 ]
[; ;virtualwire.c: 427: else
[; ;virtualwire.c: 428: {
"428
{
[; ;virtualwire.c: 429: RB4 = (vw_tx_buf[vw_tx_index] & (1 << vw_tx_bit++)) ? 1 : 0;
"429
[e = _RB4 -> ? != & -> *U + &U _vw_tx_buf * -> _vw_tx_index `ux -> -> # *U &U _vw_tx_buf `ui `ux `i << -> 1 `i ++ _vw_tx_bit -> -> 1 `i `uc -> 0 `i : -> 1 `i -> 0 `i `b ]
[; ;virtualwire.c: 430: if (vw_tx_bit >= 6)
"430
[e $ ! >= -> _vw_tx_bit `i -> 6 `i 167  ]
[; ;virtualwire.c: 431: {
"431
{
[; ;virtualwire.c: 432: vw_tx_bit = 0;
"432
[e = _vw_tx_bit -> -> 0 `i `uc ]
[; ;virtualwire.c: 433: vw_tx_index++;
"433
[e ++ _vw_tx_index -> -> 1 `i `uc ]
"434
}
[e :U 167 ]
"435
}
[e :U 166 ]
"436
}
[e :U 164 ]
"438
}
[e :U 160 ]
[; ;virtualwire.c: 434: }
[; ;virtualwire.c: 435: }
[; ;virtualwire.c: 436: }
[; ;virtualwire.c: 438: }
[; ;virtualwire.c: 440: if (vw_tx_sample > 7)
"440
[e $ ! > -> _vw_tx_sample `i -> 7 `i 168  ]
[; ;virtualwire.c: 441: vw_tx_sample = 0;
"441
[e = _vw_tx_sample -> -> 0 `i `uc ]
[e :U 168 ]
[; ;virtualwire.c: 445: if (vw_rx_enabled && !vw_tx_enabled)
"445
[e $ ! && != -> _vw_rx_enabled `i -> -> -> 0 `i `uc `i ! != -> _vw_tx_enabled `i -> -> -> 0 `i `uc `i 169  ]
[; ;virtualwire.c: 446: vw_pll();
"446
[e ( _vw_pll ..  ]
[e :U 169 ]
[; ;virtualwire.c: 447: }
"447
[e :UE 158 ]
}
